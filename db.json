{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/purer/source/BingSiteAuth.xml","path":"BingSiteAuth.xml","modified":0,"renderable":1},{"_id":"themes/purer/source/baidu_verify_Pt5LrWzPy5.html","path":"baidu_verify_Pt5LrWzPy5.html","modified":0,"renderable":1},{"_id":"themes/purer/source/google7a3ffee1dce989d0.html","path":"google7a3ffee1dce989d0.html","modified":0,"renderable":1},{"_id":"themes/purer/source/css/common.min.css","path":"css/common.min.css","modified":0,"renderable":1},{"_id":"themes/purer/source/css/iconfont.min.css","path":"css/iconfont.min.css","modified":0,"renderable":1},{"_id":"themes/purer/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/purer/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/purer/source/js/dom-event.min.js","path":"js/dom-event.min.js","modified":0,"renderable":1},{"_id":"themes/purer/source/js/light-gallery.min.js","path":"js/light-gallery.min.js","modified":0,"renderable":1},{"_id":"themes/purer/source/js/repository.min.js","path":"js/repository.min.js","modified":0,"renderable":1},{"_id":"themes/purer/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub.md","hash":"ae3fc70438a733e1fbff24091d604740d4c669df","modified":1597931230013},{"_id":"source/_posts/如何在MacOS上使用Docker安装Oracle.md","hash":"f1c2a89a63754630eb87cc4c239e2a52543b3f86","modified":1598705977246},{"_id":"source/categories/index.md","hash":"7d68bd8c9a511263143803bf15f847ca47262233","modified":1597925521101},{"_id":"source/about/index.md","hash":"de8bc98a7ff20163f17939392a310441e5d3d63d","modified":1598708739006},{"_id":"source/tags/index.md","hash":"283d312b06269f0baf6fd81d996de9c55bf438dc","modified":1597930330602},{"_id":"source/repository/index.md","hash":"253977e65e6435af92c30189ad1e0c8c1b25f9e0","modified":1597717197015},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/imagetags.jpg","hash":"17626fd67f42f14a619a9d8c12048039d02d7b0b","modified":1597929822483},{"_id":"source/links/index.md","hash":"756783d1539c1f711b153edba230d39ed2136538","modified":1598017088256},{"_id":"source/_posts/MacOS如何显示隐藏文件.md","hash":"5dad504db3e891a4624b8e476308dc9e17b64a22","modified":1597840332485},{"_id":"source/_posts/hello-world.md","hash":"5e053aee6964844439d9cf36ef6bda9e674bdf3e","modified":1598007054306},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/signup.jpg","hash":"36f0184d90239d94e19daed02d550ff22c0cacfc","modified":1597929781086},{"_id":"source/_posts/如何在MacOS上使用Docker安装Oracle/dockerdashboard.jpg","hash":"12e47fca11d57f5105afc0c39f3f69263835637f","modified":1597921614691},{"_id":"themes/purer/layout/_common/fancybox.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1597716418421},{"_id":"themes/purer/.gitignore","hash":"ec5f56c4dc92ea4c64119bbe5f334e48ce7aa2ec","modified":1597716418419},{"_id":"themes/purer/.eslintrc.json","hash":"414df91e71ec5c0fa9f452ebe8ce600e1cbf9e27","modified":1597716418419},{"_id":"themes/purer/.browserslistrc","hash":"eb6d54d28955dc1d46af02707cb8058b21949f14","modified":1597716418419},{"_id":"themes/purer/_config.yml","hash":"8df7f06428f4b832ff71b9283014865cd84e28ca","modified":1598018368000},{"_id":"themes/purer/LICENSE","hash":"c7e216f59494ddc7b7c02f8a198ddb08d87e1242","modified":1597716418419},{"_id":"themes/purer/README.md","hash":"ecd2818f1505aca592cfd7d295432f257fb6adae","modified":1597716418419},{"_id":"themes/purer/_config.example.yml","hash":"e638949f75f16a693be091756b091308a86f3af0","modified":1597716418419},{"_id":"themes/purer/gulpfile.js","hash":"1bd5d3c775a7bf122fbc400682da4645f22eae3b","modified":1597716418419},{"_id":"themes/purer/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1597716418420},{"_id":"themes/purer/languages/en.yml","hash":"4b0365376150241b27ff18a82dc0599a422b35e3","modified":1597716418420},{"_id":"themes/purer/languages/zh-TW.yml","hash":"296596bd9c5bd3d6ab242ae5ab5734919708d195","modified":1597716418420},{"_id":"themes/purer/languages/zh-CN.yml","hash":"30e1f76fdbefce2336e0dfd0009cd2981943975e","modified":1597716418420},{"_id":"themes/purer/layout/archive.ejs","hash":"0f7fe26b60343a87ce25e6403c239763b2f7a8dc","modified":1597716418425},{"_id":"themes/purer/layout/category.ejs","hash":"959398008a5e5d235a5159eddc0b7b2d1f3609c1","modified":1597716418425},{"_id":"themes/purer/layout/index.ejs","hash":"a912e133831ed2af724ddabb501fa601866f79e9","modified":1597716418425},{"_id":"themes/purer/layout/layout.ejs","hash":"81252ed8767d1d31df71959492180d837faa312f","modified":1597716418425},{"_id":"themes/purer/layout/post.ejs","hash":"f5c10f7472ec0ffc882c93be05ab69325914b07e","modified":1597716418425},{"_id":"themes/purer/layout/tag.ejs","hash":"011474c8a4cfb3d3fcc914be61eb863c96928dd6","modified":1597716418425},{"_id":"themes/purer/scripts/page_title.js","hash":"5163e25788bebcdb89cbededa97ec980ad0bdfba","modified":1597716418427},{"_id":"themes/purer/source/BingSiteAuth.xml","hash":"e5669c1a90e66a5a1e492273c83ffb581bbabdcc","modified":1597927091534},{"_id":"themes/purer/source/baidu_verify_Pt5LrWzPy5.html","hash":"d4335858fb3a1aeb4b851c2aa2cae068ccfecc31","modified":1597925158268},{"_id":"themes/purer/source/google7a3ffee1dce989d0.html","hash":"2eadf64c07fadf5a10ffce2e5945d9483e9818dc","modified":1597919034163},{"_id":"themes/purer/.github/workflows/build.yml","hash":"47a1f9bae7001a37d1fa522b7af3ada536edbfd8","modified":1597716418419},{"_id":"themes/purer/tailwind.config.js","hash":"55d5f384700922e0dfc0b9c8dbd403b3c8fe0c4f","modified":1597716418431},{"_id":"themes/purer/package.json","hash":"7980bfbf493a61c29f73e7606dff360593e2e2ab","modified":1597716418427},{"_id":"themes/purer/layout/_comment/disqus.ejs","hash":"624e637d219db57290fe68d2179bffb619f3cdb8","modified":1597716418420},{"_id":"themes/purer/layout/_comment/gitalk.ejs","hash":"41e447512bf85359733d6c87e2991f5ad6efc9b7","modified":1597716418420},{"_id":"themes/purer/layout/_comment/valine.ejs","hash":"f952bc69a55b5ab9aa3de6b146903fdcb7f44616","modified":1597716418420},{"_id":"themes/purer/layout/_comment/livere.ejs","hash":"bda6ade3f4671304dcbdb5b2acd56295f07d6cac","modified":1597716418420},{"_id":"themes/purer/layout/_common/footer.ejs","hash":"17068dd236917325cca3358df3109f8dcf07b9e7","modified":1597716418421},{"_id":"themes/purer/layout/_common/head.ejs","hash":"a1ed99a6d04367f102fe40aa4adc6f9c5ed56b86","modified":1597716418421},{"_id":"themes/purer/layout/_common/aside.ejs","hash":"84ff19181f05803135a6bc665afa02187c96b486","modified":1597716418420},{"_id":"themes/purer/layout/_common/header.ejs","hash":"a432767dd35522ae5a0d9fda7a2b4037e9bcc504","modified":1597716418421},{"_id":"themes/purer/layout/_common/scripts.ejs","hash":"1f9b0d0a5ca7c608e8c51c42ec50d4425f1fcc8d","modified":1597716418421},{"_id":"themes/purer/layout/_page/categories.ejs","hash":"399e2fa8fc7f713224298f1c6e26098f2d5a98da","modified":1597716418421},{"_id":"themes/purer/layout/_common/social.ejs","hash":"5c1f46accb08e34a3ac5650f112adaa0f41ca9dc","modified":1597716418421},{"_id":"themes/purer/layout/_page/links.ejs","hash":"041c7fe5c3a110dafc0d897fe9941841bdd998d9","modified":1597716418421},{"_id":"themes/purer/layout/_page/post.ejs","hash":"1b308733893d0288717673bc107acd0b5bb3a1f6","modified":1597716418422},{"_id":"themes/purer/layout/_page/repository.ejs","hash":"bb877031f2ed44a2e077551692bbe1c75adc54eb","modified":1597716418422},{"_id":"themes/purer/layout/_page/tagcloud.ejs","hash":"cbc44efe8b4e49cd720d4b7f83a51c2cf07e3783","modified":1597716418422},{"_id":"themes/purer/layout/_partial/archive.ejs","hash":"bbe8a6d8d9198312c04fea9e4a945ea18e4d4cd8","modified":1597716418422},{"_id":"themes/purer/layout/_partial/article-list.ejs","hash":"28a84fa66c6a1520dd7abb375b4caabeb16da592","modified":1597716418422},{"_id":"themes/purer/layout/_partial/comment.ejs","hash":"d90d9568cd248d50b302140998827bd6816d70f4","modified":1597716418423},{"_id":"themes/purer/layout/_partial/pagination.ejs","hash":"8f0475281d6f4d5e166940d051b20a85703261e6","modified":1597716418423},{"_id":"themes/purer/layout/_partial/article-post.ejs","hash":"bc262bee3f75dfaec7d47279e034450e1b9167c9","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post-item-list.ejs","hash":"55eb78c1ec9e6c566558e6f6f45fd4a9827f7f32","modified":1597716418423},{"_id":"themes/purer/layout/_partial/sidebar-about.ejs","hash":"01a081c878faf8c95311fdbdb9088b901159e30f","modified":1597716418424},{"_id":"themes/purer/layout/_partial/sidebar-toc.ejs","hash":"09403da4f35fc238c275e7595be771fd3c3b8b76","modified":1597716418424},{"_id":"themes/purer/layout/_search/index.ejs","hash":"67c7e748035526d2d05dec25b3d0c84f286dcbfe","modified":1597716418424},{"_id":"themes/purer/layout/_search/local.ejs","hash":"8189e2e0931cb6a38117154cfc7b28de56eda4a4","modified":1597716418424},{"_id":"themes/purer/layout/_widget/archive.ejs","hash":"a0a92a6ec51545fe6bb35fae633f68fa3d96d92b","modified":1597716418424},{"_id":"themes/purer/layout/_widget/category.ejs","hash":"7fa7de678815575c63f2f1c088fd5b695e5dfcf4","modified":1597716418424},{"_id":"themes/purer/layout/_widget/recent_posts.ejs","hash":"baa2a1f61ae52d22058ed73908cb254cd4e0b880","modified":1597716418425},{"_id":"themes/purer/layout/_widget/tag.ejs","hash":"af79f60890cc21500269ade140f594dbd6f6c653","modified":1597716418425},{"_id":"themes/purer/layout/_widget/tagcloud.ejs","hash":"4b7508757eb752730c98a26052e9a273b6c1b8f3","modified":1597716418425},{"_id":"themes/purer/source/css/common.min.css","hash":"bad7305d6f8037c02aaa656ee4284df0fdb801bc","modified":1597716418428},{"_id":"themes/purer/source/css/iconfont.min.css","hash":"ad1368ebb996376abb4e4fec22fbc1efe55cdc6a","modified":1597716418428},{"_id":"themes/purer/source/images/avatar.jpeg","hash":"2f694399fa3fa516572da8b4b462fe84de8daaba","modified":1597550198100},{"_id":"themes/purer/source/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1597842336983},{"_id":"themes/purer/source/js/dom-event.min.js","hash":"cca69743e4f5987f686726b5ca066bf9015c0bd9","modified":1597716418428},{"_id":"themes/purer/source/js/light-gallery.min.js","hash":"231d208e0ae44c7539a3b25d4bd8022a2d3c0d69","modified":1597716418429},{"_id":"themes/purer/source/js/search.min.js","hash":"0fe3edbb6034abe3ae54aa3fa0ade6aa084dcd88","modified":1597716418429},{"_id":"themes/purer/source/js/repository.min.js","hash":"23209310ad09344faf34fdbc5120956f3df2512f","modified":1597716418429},{"_id":"themes/purer/src/css/iconfont.css","hash":"02eaa919fc6a5649b2ad28c84dcfc363a2b919b7","modified":1597716418429},{"_id":"themes/purer/layout/_partial/post/category.ejs","hash":"6b5e5d432a3e80eed4e0ffa49e436e0ca5d8fec8","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post/copyright.ejs","hash":"7d4cf2e704d497c8203b071b3e2ada0b4ba663b3","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post/date.ejs","hash":"7a784cc9a9b14b9df59221417fdeac58f8287d8e","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post/gallery.ejs","hash":"a1c54188e90d81f64705591e8ea79bf56ce120ae","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post/tag.ejs","hash":"3c69334ea699ebea0dd2a4f897b3f48da26644da","modified":1597716418423},{"_id":"themes/purer/layout/_partial/post/title.ejs","hash":"8deee3f1b8af1e7d2b8877f9397cfa87fd29c9bd","modified":1597716418424},{"_id":"themes/purer/layout/_partial/post/wordcount.ejs","hash":"1fb385db6e3ab0e6f64857201d672b52a304a86d","modified":1597716418424},{"_id":"themes/purer/src/css/common.css","hash":"ccde14e74c2fb38bb11130e10ce47143ef8cc317","modified":1597716418429},{"_id":"themes/purer/src/js/repository.js","hash":"8f8fe2da4dc01a01796d1a5c6cb3838dd4e5a39e","modified":1597716418430},{"_id":"themes/purer/src/js/light-gallery/lg-fullscreen.js","hash":"ad98f80f4a9528be6b0360c2a5146984369f9bb2","modified":1597716418430},{"_id":"themes/purer/src/js/light-gallery/lg-zoom.js","hash":"460c3a25afde37a76c77e90b8d1a0b7a3e8716dd","modified":1597716418430},{"_id":"themes/purer/src/js/light-gallery/light-gallery.js","hash":"24e922bf6e8de7f03d4cc22f32c5f32c0371cb42","modified":1597716418430},{"_id":"themes/purer/src/js/dom-event/menu-toggle-btn.js","hash":"d45c1261603e745dca32a2f6c9a7e9df6b639a7f","modified":1597716418430},{"_id":"themes/purer/src/js/search/local-search.js","hash":"0faa76e59422418257f89f7087e84033cca0965c","modified":1597716418431},{"_id":"themes/purer/src/js/dom-event/search-toggle.js","hash":"7baf6610fd7132f0d8c2520bc98192deb7b79a86","modified":1597716418430},{"_id":"themes/purer/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1597572566364},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/login.jpg","hash":"c065028161232ce6ea7e8eb851f086f0a454a3cf","modified":1597929803303},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/containers.jpg","hash":"316e76acf6f513657de8eede797f66c6b5b7bb4c","modified":1597929770556},{"_id":"themes/purer/package-lock.json","hash":"f4065fcbcffdc523ef6cc1373a7b90d7134a2967","modified":1597716418427},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/list.jpg","hash":"ebd606e1dc18437c6c2e5bfd174b93f4d48d28d1","modified":1597929797002},{"_id":"public/content.json","hash":"572162b4062670fa4eae2e0740c435a9ce04ebc4","modified":1599882341780},{"_id":"public/baidusitemap.xml","hash":"0e45632935fcee8b14c4cc167ae368d9493a890d","modified":1599882341780},{"_id":"public/sitemap.xml","hash":"0e16c92c5c944c4e7d6d6d31bc72ae623295a6d6","modified":1599882341780},{"_id":"public/categories/index.html","hash":"05e1cbef9d53f5bde77e943accdc1e9fec27f8b6","modified":1598704901430},{"_id":"public/links/index.html","hash":"e5a39631668c649d61d311d0490c2848a4e24862","modified":1598704901430},{"_id":"public/tags/index.html","hash":"8243703507632507624919366de21b1739fbcfc6","modified":1598704901430},{"_id":"public/archives/index.html","hash":"67889b633f9ee64f6885d7a368d421a2aea8da59","modified":1598704901430},{"_id":"public/archives/2020/index.html","hash":"d1761b1e9dd3349e92544907b708733fd88c556d","modified":1598704901430},{"_id":"public/archives/2020/08/index.html","hash":"eb702b7183f35ef4a13a1b6b3876943fd917ce8e","modified":1598704901430},{"_id":"public/index.html","hash":"6501d4c0ae38c7893784751a2a682963f3f1ca2a","modified":1599882341780},{"_id":"public/repository/index.html","hash":"10b3dbee52718e2ec5bf0550235b7b567759fb50","modified":1598014832826},{"_id":"public/2020/08/19/MacOS如何显示隐藏文件/index.html","hash":"667faf9589810b77e50d28af12ddbd3bb13cdbdb","modified":1598274536440},{"_id":"public/2020/08/18/hello-world/index.html","hash":"1a0ee533515103765ca4ea89109ac76864a4b416","modified":1597930060263},{"_id":"public/categories/Docker/index.html","hash":"e82f0e4f96da2305727d40a016eebe97fd0c9781","modified":1598014832826},{"_id":"public/categories/OS技巧/index.html","hash":"d03297dda2587f4bfd5dff440c12177be3007458","modified":1598014832826},{"_id":"public/categories/MacOS/index.html","hash":"c99017958cc9d4a5eec5087993362dae55fea549","modified":1598014832826},{"_id":"public/tags/Docker/index.html","hash":"24de95ef72c2d21419729d4903d51b906935460f","modified":1598014832826},{"_id":"public/tags/MacOS/index.html","hash":"75cd449690ac55fedb75dda564b3a896646bd141","modified":1598014832826},{"_id":"public/tags/Docker-Hub/index.html","hash":"b471f9762c5d64bbdbbc669cbbdcf2f8a4eff392","modified":1598014832826},{"_id":"public/about/index.html","hash":"40549884fb7da0ebb3db5fd87899b87c2dbc2530","modified":1598709434796},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/index.html","hash":"608897b566013d0b5352449c4eef50617033dd3c","modified":1598274536440},{"_id":"public/2020/08/19/如何在MacOS上使用Docker安装Oracle/index.html","hash":"5ac586279aa42becd6dd006dbebe22222aa1a322","modified":1598706967981},{"_id":"public/tags/隐藏文件/index.html","hash":"31202c22b33599554dca0ef80f3aa34d80dea05f","modified":1598014832826},{"_id":"public/tags/Oracle/index.html","hash":"d18a86d41336e7c33f0107ba68595784fbec5ad4","modified":1599882341780},{"_id":"public/tags/Hidden-File/index.html","hash":"061541319ecc9f858fa486ec4d4f88a032fcd7ac","modified":1598014832826},{"_id":"public/BingSiteAuth.xml","hash":"e5669c1a90e66a5a1e492273c83ffb581bbabdcc","modified":1597930060263},{"_id":"public/images/avatar.jpeg","hash":"2f694399fa3fa516572da8b4b462fe84de8daaba","modified":1597930060263},{"_id":"public/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1597930060263},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/imagetags.jpg","hash":"17626fd67f42f14a619a9d8c12048039d02d7b0b","modified":1597930060263},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/signup.jpg","hash":"36f0184d90239d94e19daed02d550ff22c0cacfc","modified":1597930060263},{"_id":"public/2020/08/19/如何在MacOS上使用Docker安装Oracle/dockerdashboard.jpg","hash":"12e47fca11d57f5105afc0c39f3f69263835637f","modified":1597930060263},{"_id":"public/baidu_verify_Pt5LrWzPy5.html","hash":"d4335858fb3a1aeb4b851c2aa2cae068ccfecc31","modified":1597930060263},{"_id":"public/google7a3ffee1dce989d0.html","hash":"2eadf64c07fadf5a10ffce2e5945d9483e9818dc","modified":1597930060263},{"_id":"public/css/iconfont.min.css","hash":"ad1368ebb996376abb4e4fec22fbc1efe55cdc6a","modified":1597930060263},{"_id":"public/js/dom-event.min.js","hash":"cca69743e4f5987f686726b5ca066bf9015c0bd9","modified":1597930060263},{"_id":"public/js/light-gallery.min.js","hash":"231d208e0ae44c7539a3b25d4bd8022a2d3c0d69","modified":1597930060263},{"_id":"public/js/search.min.js","hash":"0fe3edbb6034abe3ae54aa3fa0ade6aa084dcd88","modified":1597930060263},{"_id":"public/js/repository.min.js","hash":"23209310ad09344faf34fdbc5120956f3df2512f","modified":1597930060263},{"_id":"public/css/common.min.css","hash":"bad7305d6f8037c02aaa656ee4284df0fdb801bc","modified":1597930060263},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/login.jpg","hash":"c065028161232ce6ea7e8eb851f086f0a454a3cf","modified":1597930060263},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/containers.jpg","hash":"316e76acf6f513657de8eede797f66c6b5b7bb4c","modified":1597930060263},{"_id":"public/2020/08/20/Docker创建镜像并上传到Docker-Hub/list.jpg","hash":"ebd606e1dc18437c6c2e5bfd174b93f4d48d28d1","modified":1597930060263},{"_id":"source/.DS_Store","hash":"cc75fbdb977a72e3c33a32b977ec965c1597d5c5","modified":1597930612505},{"_id":"themes/purer/.DS_Store","hash":"78fddc586293a8522090515fb5b730d044647ee1","modified":1598006734535},{"_id":"public/2020/08/19/hello-world/index.html","hash":"d9afd9d039006d13129b9ea311550fa69518bfaf","modified":1598274536440},{"_id":"source/_posts/Oracle-CDB-和PDB，表空间，建表、用户及角色.md","hash":"c08aaacb80dd285fa3038acdcdc5e022059565c0","modified":1598361234931},{"_id":"public/2020/08/25/Oracle-CDB-和PDB，表空间，建表、用户及角色/index.html","hash":"2bd9b447e37bf9ce20544c5d8df9f411210cf859","modified":1598361257333},{"_id":"public/categories/ORACLE/index.html","hash":"9275231735e9f3e22479aedddadfd90697b05b85","modified":1598704901430},{"_id":"public/tags/oracle/index.html","hash":"a28122e6f674c211bcbb5c507443c8a920c89101","modified":1598361633639},{"_id":"public/tags/Tablespace/index.html","hash":"d395198ed1e04fdb32b5be398f4ca3f82db90eda","modified":1598361633639},{"_id":"public/tags/schema/index.html","hash":"640f8bdb0b5fbb4d493e756c549344543cca5b00","modified":1598361633639},{"_id":"source/_posts/Oracle CDB和PDB 表空间 创建用户及角色.md","hash":"775d942c2215785b8349a9101949a0d2b41e169b","modified":1598361615178},{"_id":"public/2020/08/25/Oracle CDB和PDB 表空间 创建用户及角色/index.html","hash":"02e94427cd711f9f823188f298ab56b80fcb6622","modified":1598361633639},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色.md","hash":"474631db24f3f65c3c280b5a981eafbf110280ff","modified":1599882219370},{"_id":"public/tags/TABLESPACE/index.html","hash":"0b20b033a6d992837762b6063b2cba4a3b0093c5","modified":1599882341780},{"_id":"public/tags/ORACLE/index.html","hash":"c27fdea748d05c32e4b34dd5dda5f74fb38ba8f9","modified":1599882341780},{"_id":"public/tags/SCHEMA/index.html","hash":"0d1f3a93410d2f849199c411ac7176bde4f3978b","modified":1599882341780},{"_id":"public/tags/ROLE/index.html","hash":"cdeae2964d8a052d26dc187b029d82cc7e6030a2","modified":1598704901430},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/index.html","hash":"6720f2162f7f930ace14e55b46a33d6661064e35","modified":1599882341780},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/oracle.jpg","hash":"c7bc2668639a86716083710f71f0e7e09bc5a66c","modified":1598705248999},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/pdbs.png","hash":"a3017d02b6edcb1183be8b09b3b41d3ddadecb03","modified":1598705740772},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/sqldeveloperoverview.png","hash":"2c7189ff3ec3c9893be604ae70b8cb3e8c20d351","modified":1598706074203},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/pdbconfig.png","hash":"cc2dc25897009b430991a19c8623392756cc9db3","modified":1598706539014},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/cdbconfig.png","hash":"145613c8f04f9e1961714873c92d517cec729f1e","modified":1598706218328},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/oracle.jpg","hash":"c7bc2668639a86716083710f71f0e7e09bc5a66c","modified":1598706967981},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/pdbs.png","hash":"a3017d02b6edcb1183be8b09b3b41d3ddadecb03","modified":1598706967981},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/sqldeveloperoverview.png","hash":"2c7189ff3ec3c9893be604ae70b8cb3e8c20d351","modified":1598706967981},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/cdbconfig.png","hash":"145613c8f04f9e1961714873c92d517cec729f1e","modified":1598706967981},{"_id":"public/2020/08/25/Oracle-CDB-PDB-表空间创建用户及角色/pdbconfig.png","hash":"cc2dc25897009b430991a19c8623392756cc9db3","modified":1598706967981}],"Category":[{"name":"Docker","_id":"cke2uatpr0007kcwahk7v4pem"},{"name":"OS技巧","_id":"cke2uatpv000bkcwacreydakg"},{"name":"MacOS","_id":"cke2uatpv000ekcwa7d8m1idt"},{"name":"ORACLE","_id":"cke9yu4h30001udwab3pm39fb"}],"Data":[],"Page":[{"title":"About","date":"2020-08-18T02:18:30.000Z","type":"about","layout":"about","comment":true,"_content":"\n# 关于我/About Me\n\nEverything you've ever done was done by a younger, more hopeful you who you no longer are;\nEverything you aspire to do needs to be done by an older, more experienced you who you are not yet!\n\nStory could be easier say it verbally than write it out!\n\nDo not just promise, Prove; Do not jsut dream, Do!\n\nBe prepared for more, be successful in all.\n\n如果加载比较慢，可以尝试如下链接：\nhttps://1qh40q.coding-pages.com\n\n\n本博客初衷是：备忘学习中遇到的问题，及日常笔记作用。\n\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2020-08-18 10:18:30\ntype: about\nlayout: about\ncomment: true\n---\n\n# 关于我/About Me\n\nEverything you've ever done was done by a younger, more hopeful you who you no longer are;\nEverything you aspire to do needs to be done by an older, more experienced you who you are not yet!\n\nStory could be easier say it verbally than write it out!\n\nDo not just promise, Prove; Do not jsut dream, Do!\n\nBe prepared for more, be successful in all.\n\n如果加载比较慢，可以尝试如下链接：\nhttps://1qh40q.coding-pages.com\n\n\n本博客初衷是：备忘学习中遇到的问题，及日常笔记作用。\n\n","updated":"2020-08-29T13:45:39.006Z","path":"about/index.html","_id":"cke2uatpg0000kcwa0p3m42jl","comments":1,"content":"<h1 id=\"关于我-About-Me\">关于我/About Me</h1>\n<p>Everything you’ve ever done was done by a younger, more hopeful you who you no longer are;<br>\nEverything you aspire to do needs to be done by an older, more experienced you who you are not yet!</p>\n<p>Story could be easier say it verbally than write it out!</p>\n<p>Do not just promise, Prove; Do not jsut dream, Do!</p>\n<p>Be prepared for more, be successful in all.</p>\n<p>如果加载比较慢，可以尝试如下链接：<br>\n<a href=\"https://1qh40q.coding-pages.com\">https://1qh40q.coding-pages.com</a></p>\n<p>本博客初衷是：备忘学习中遇到的问题，及日常笔记作用。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于我-About-Me\">关于我/About Me</h1>\n<p>Everything you’ve ever done was done by a younger, more hopeful you who you no longer are;<br>\nEverything you aspire to do needs to be done by an older, more experienced you who you are not yet!</p>\n<p>Story could be easier say it verbally than write it out!</p>\n<p>Do not just promise, Prove; Do not jsut dream, Do!</p>\n<p>Be prepared for more, be successful in all.</p>\n<p>如果加载比较慢，可以尝试如下链接：<br>\n<a href=\"https://1qh40q.coding-pages.com\">https://1qh40q.coding-pages.com</a></p>\n<p>本博客初衷是：备忘学习中遇到的问题，及日常笔记作用。</p>\n"},{"title":"文章分类","date":"2020-08-18T02:18:44.000Z","layout":"categories","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2020-08-18 10:18:44\nlayout: categories\ntype: categories\n---\n","updated":"2020-08-20T12:12:01.101Z","path":"categories/index.html","comments":1,"_id":"cke2uatpk0001kcwa1dllcq6w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"repository","date":"2020-08-18T02:19:06.000Z","layout":"repository","comments":0,"_content":"","source":"repository/index.md","raw":"---\ntitle: repository\ndate: 2020-08-18 10:19:06\nlayout: repository\ncomments: false\n#sidebar: none\n---\n","updated":"2020-08-18T02:19:57.015Z","path":"repository/index.html","_id":"cke2uatpk0002kcwa2yz16l32","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"links","date":"2020-08-18T02:18:51.000Z","type":"links","layout":"links","_content":"\n**Coding 部署博客**\nhttps://1qh40q.coding-pages.com/\n","source":"links/index.md","raw":"---\ntitle: links\ndate: 2020-08-18 10:18:51\ntype: links\nlayout: links\n---\n\n**Coding 部署博客**\nhttps://1qh40q.coding-pages.com/\n","updated":"2020-08-21T13:38:08.256Z","path":"links/index.html","_id":"cke2uatpl0003kcwa2dmjdmny","comments":1,"content":"<p><strong>Coding 部署博客</strong><br>\n<a href=\"https://1qh40q.coding-pages.com/\">https://1qh40q.coding-pages.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Coding 部署博客</strong><br>\n<a href=\"https://1qh40q.coding-pages.com/\">https://1qh40q.coding-pages.com/</a></p>\n"},{"title":"标签云","date":"2020-08-18T02:19:15.000Z","layout":"tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签云\ndate: 2020-08-18 10:19:15\nlayout: tags\ntype: tags\n---\n","updated":"2020-08-20T13:32:10.602Z","path":"tags/index.html","_id":"cke2uatpl0004kcwagem69mzy","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker创建镜像并上传到Docker Hub","date":"2020-08-20T12:52:41.000Z","comment":true,"_content":"\n介绍如何实现自己build一个Docker image，然后push到自己到Docker Hub中的过程。\n<!--more-->\n\n# 准备工作\n需要自己注册一个Docker Hub的账号。\nURL： https://hub.docker.com/\n\n\n# Step 1，启动Docker\n启动docker，保持其running状态\n\n# Step 2，login\n **新建一个命令行窗口**\n ```bash\ndocker login\n ```\n ![Login](login.jpg)\n\n# Step 3 查看容器\n\n```bash\ndocker ps -a\n```\n ![Login](containers.jpg)\n\n# Step 4 选择要生成镜像的容器ID（CONTAINER ID)\n```bash\ndocker commit #{CONTAINER ID} yourImageName\n```\n# Step 5 查看生产的镜像\n```bash\ndocker images\n```\n ![Images](list.jpg)\n\n# Step 6 修改镜像指向自己的Docker Hub\n```bash\ndocker tag #{IMAGE ID} dockerHub用户名/dockerHub仓库名:tag\n```\n命令行中用户名和仓库名，对应自己Docker Hub的用户名及仓库名，最后冒号后的tag是你要打的tag\n\n# Step 7 push镜像至Docker Hub\n```bash\ndocker push dockerHub用户名/dockerHub仓库名:tag标签\n```\n\n\n**经过如上步骤，便可以在自己的Docker Hub上看到刚刚push上来的镜像了**","source":"_posts/Docker创建镜像并上传到Docker-Hub.md","raw":"---\ntitle: Docker创建镜像并上传到Docker Hub\ndate: 2020-08-20 20:52:41\ncomment: true\ncategories: Docker\ntags:\n- Docker\n- Docker Hub\n---\n\n介绍如何实现自己build一个Docker image，然后push到自己到Docker Hub中的过程。\n<!--more-->\n\n# 准备工作\n需要自己注册一个Docker Hub的账号。\nURL： https://hub.docker.com/\n\n\n# Step 1，启动Docker\n启动docker，保持其running状态\n\n# Step 2，login\n **新建一个命令行窗口**\n ```bash\ndocker login\n ```\n ![Login](login.jpg)\n\n# Step 3 查看容器\n\n```bash\ndocker ps -a\n```\n ![Login](containers.jpg)\n\n# Step 4 选择要生成镜像的容器ID（CONTAINER ID)\n```bash\ndocker commit #{CONTAINER ID} yourImageName\n```\n# Step 5 查看生产的镜像\n```bash\ndocker images\n```\n ![Images](list.jpg)\n\n# Step 6 修改镜像指向自己的Docker Hub\n```bash\ndocker tag #{IMAGE ID} dockerHub用户名/dockerHub仓库名:tag\n```\n命令行中用户名和仓库名，对应自己Docker Hub的用户名及仓库名，最后冒号后的tag是你要打的tag\n\n# Step 7 push镜像至Docker Hub\n```bash\ndocker push dockerHub用户名/dockerHub仓库名:tag标签\n```\n\n\n**经过如上步骤，便可以在自己的Docker Hub上看到刚刚push上来的镜像了**","slug":"Docker创建镜像并上传到Docker-Hub","published":1,"updated":"2020-08-20T13:47:10.013Z","_id":"cke2uatpn0005kcwaeo155gmp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>介绍如何实现自己build一个Docker image，然后push到自己到Docker Hub中的过程。</p>\n<a id=\"more\"></a>\n<h1 id=\"准备工作\">准备工作</h1>\n<p>需要自己注册一个Docker Hub的账号。<br>\nURL： <a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<h1 id=\"Step-1，启动Docker\">Step 1，启动Docker</h1>\n<p>启动docker，保持其running状态</p>\n<h1 id=\"Step-2，login\">Step 2，login</h1>\n<p><strong>新建一个命令行窗口</strong></p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login</span><br></pre></td></tr></table></figure>\n<p><img src=\"login.jpg\" alt=\"Login\"></p>\n<h1 id=\"Step-3-查看容器\">Step 3 查看容器</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"containers.jpg\" alt=\"Login\"></p>\n<h1 id=\"Step-4-选择要生成镜像的容器ID（CONTAINER-ID\">Step 4 选择要生成镜像的容器ID（CONTAINER ID)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit <span class=\"comment\">#&#123;CONTAINER ID&#125; yourImageName</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-5-查看生产的镜像\">Step 5 查看生产的镜像</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n<p><img src=\"list.jpg\" alt=\"Images\"></p>\n<h1 id=\"Step-6-修改镜像指向自己的Docker-Hub\">Step 6 修改镜像指向自己的Docker Hub</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag <span class=\"comment\">#&#123;IMAGE ID&#125; dockerHub用户名/dockerHub仓库名:tag</span></span><br></pre></td></tr></table></figure>\n<p>命令行中用户名和仓库名，对应自己Docker Hub的用户名及仓库名，最后冒号后的tag是你要打的tag</p>\n<h1 id=\"Step-7-push镜像至Docker-Hub\">Step 7 push镜像至Docker Hub</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push dockerHub用户名/dockerHub仓库名:tag标签</span><br></pre></td></tr></table></figure>\n<p><strong>经过如上步骤，便可以在自己的Docker Hub上看到刚刚push上来的镜像了</strong></p>\n","site":{"data":{}},"excerpt":"<p>介绍如何实现自己build一个Docker image，然后push到自己到Docker Hub中的过程。</p>","more":"<h1 id=\"准备工作\">准备工作</h1>\n<p>需要自己注册一个Docker Hub的账号。<br>\nURL： <a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<h1 id=\"Step-1，启动Docker\">Step 1，启动Docker</h1>\n<p>启动docker，保持其running状态</p>\n<h1 id=\"Step-2，login\">Step 2，login</h1>\n<p><strong>新建一个命令行窗口</strong></p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login</span><br></pre></td></tr></table></figure>\n<p><img src=\"login.jpg\" alt=\"Login\"></p>\n<h1 id=\"Step-3-查看容器\">Step 3 查看容器</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"containers.jpg\" alt=\"Login\"></p>\n<h1 id=\"Step-4-选择要生成镜像的容器ID（CONTAINER-ID\">Step 4 选择要生成镜像的容器ID（CONTAINER ID)</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit <span class=\"comment\">#&#123;CONTAINER ID&#125; yourImageName</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-5-查看生产的镜像\">Step 5 查看生产的镜像</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n<p><img src=\"list.jpg\" alt=\"Images\"></p>\n<h1 id=\"Step-6-修改镜像指向自己的Docker-Hub\">Step 6 修改镜像指向自己的Docker Hub</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag <span class=\"comment\">#&#123;IMAGE ID&#125; dockerHub用户名/dockerHub仓库名:tag</span></span><br></pre></td></tr></table></figure>\n<p>命令行中用户名和仓库名，对应自己Docker Hub的用户名及仓库名，最后冒号后的tag是你要打的tag</p>\n<h1 id=\"Step-7-push镜像至Docker-Hub\">Step 7 push镜像至Docker Hub</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push dockerHub用户名/dockerHub仓库名:tag标签</span><br></pre></td></tr></table></figure>\n<p><strong>经过如上步骤，便可以在自己的Docker Hub上看到刚刚push上来的镜像了</strong></p>"},{"title":"MacOS如何显示隐藏文件","date":"2020-08-19T12:26:53.000Z","comment":true,"_content":"\nMacOS上的隐藏文件都是以.(点)开头的文件夹或者文件，不像windows那样可以通过设置属性来使其隐藏。\n<!--more-->\n显示隐藏文件\n``` bash\ndefaults write com.apple.finder AppleShowAllFiles -bool true;\nKillAll Finder\n```\n\n不显示隐藏文件\n``` bash\ndefaults write com.apple.finder AppleShowAllFiles -bool false;\nKillAll Finder\n```","source":"_posts/MacOS如何显示隐藏文件.md","raw":"---\ntitle: MacOS如何显示隐藏文件\ndate: 2020-08-19 20:26:53\ncomment: true\ncategories: OS技巧\ntags:\n- MacOS\n- 隐藏文件\n- Hidden File\n---\n\nMacOS上的隐藏文件都是以.(点)开头的文件夹或者文件，不像windows那样可以通过设置属性来使其隐藏。\n<!--more-->\n显示隐藏文件\n``` bash\ndefaults write com.apple.finder AppleShowAllFiles -bool true;\nKillAll Finder\n```\n\n不显示隐藏文件\n``` bash\ndefaults write com.apple.finder AppleShowAllFiles -bool false;\nKillAll Finder\n```","slug":"MacOS如何显示隐藏文件","published":1,"updated":"2020-08-19T12:32:12.485Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke2uatpq0006kcwa6f1mcoh6","content":"<p>MacOS上的隐藏文件都是以.(点)开头的文件夹或者文件，不像windows那样可以通过设置属性来使其隐藏。</p>\n<a id=\"more\"></a>\n<p>显示隐藏文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">true</span>;</span><br><span class=\"line\">KillAll Finder</span><br></pre></td></tr></table></figure>\n<p>不显示隐藏文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">false</span>;</span><br><span class=\"line\">KillAll Finder</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>MacOS上的隐藏文件都是以.(点)开头的文件夹或者文件，不像windows那样可以通过设置属性来使其隐藏。</p>","more":"<p>显示隐藏文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">true</span>;</span><br><span class=\"line\">KillAll Finder</span><br></pre></td></tr></table></figure>\n<p>不显示隐藏文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">false</span>;</span><br><span class=\"line\">KillAll Finder</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2020-08-19T12:26:53.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2020-08-19 20:26:53\ncategories:\ntags:\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-08-21T10:50:54.306Z","_id":"cke2uatpt0009kcwa9ul47h71","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"如何在MacOS上使用Docker安装Oracle","date":"2020-08-19T13:10:24.000Z","comment":true,"_content":"本篇文章旨在备忘当初是如何在自己的Mac上安装并使用Oracle的。\n<!--more-->\n# 前期准备工作\n\n由于自己的电脑是Mac，并且在工作中也是一直使用Oracle，但是难受的地方是，商业化做的不错的oracle竟然没有MacOS的安装包。兵来将挡，水来土堰，办法总比困难多，想办法解决呀！\n\n## Step 1 clone/下载Oracle的Docker镜像\n主要是需要oracle的Dockerfile， get docker images here:\n https://github.com/oracle/docker-images\n 下载完成后，进入你刚刚下载完成的路径中，如下代码：\n ```bash\n cd docker-images/OracleDatabase/SingleInstance/dockerfiles\n```\n\n ## Step 2 下载Oracle的数据库的instance\n链接URL： http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\ndownload an oracle database and place it in the equvilent version folder, such as 12.2.0.1, then run below command.\n下载的时候需要有Oracle账户，相信即便没有，申请也很容易。\n\n# 开始安装\n下载完成后，把下载的zip包放到 Step1.1 **对应版本号**的文件中，比如你下载的是12.2.0.1版本的，然后使用如下命令：\n```bash\n./buildDockerImage.sh -v 12.2.0.1 -e\n```\n此步骤比较耗时，大概有**24**个步骤要跑。要耐心等待，如果出现链接超时的情况，基本就是第**7/10**步的时候。强烈建议你早晨早点起床，肯定就能秒过，不要问为什么，实践出真知。哈哈哈哈\n\n## Step 3 安装oracle instance并映射Docker中的端口及数据文件到本地端口及本地路径 \n map to local port and data file\n- 注意修改命令行中的路径(第一个冒号之前的路径)\n```bash\ndocker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/${user}/idocker/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee\n```\n注意数据文件已经map到 （/你上面指定路径/oradata）下。此时就算你删除了container，这些数据文件还是会被保留的。\n对应的log如下，注意到了最后，会停在那里，估计run命令最后调用类似docker logs -f oracle这样的命令，会tail -f类似的输出，所以我们可以直接**新建一个窗口**使用了\n```bash\ndocker stop oracle\n```\n再\n```bash\ndocker start oracle\n```\n如果不想敲命令行启动oracle，你也可以使用Docker的Dashboard来点点鼠标就可以了。\n![Docker Dashboard](dockerdashboard.jpg)\n\n**经过如上步骤之后，如果没错误，Oracle就是成功安装了。**\n**因为是使用的Oracle 12 以上版本，所以你需要了解Oracle的Container Database（CDB） 跟 Plugable Database（PDB）的区别。**\n\n参考log如下：\n```bash\n$ docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/example/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee\nORACLE PASSWORD FOR SYS, SYSTEM AND PDBADMIN: scXX7Cj+1m0=1\n \nLSNRCTL for Linux: Version 12.2.0.1.0 - Production on 20-MAY-2017 14:25:30\n \nCopyright (c) 1991, 2016, Oracle.  All rights reserved.\n \nStarting /opt/oracle/product/12.2.0.1/dbhome_1/bin/tnslsnr: please wait...\n \nTNSLSNR for Linux: Version 12.2.0.1.0 - Production\nSystem parameter file is /opt/oracle/product/12.2.0.1/dbhome_1/network/admin/listener.ora\nLog messages written to /opt/oracle/diag/tnslsnr/c9f09116cc83/listener/alert/log.xml\nListening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))\nListening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))\n \n……\n \nSQL> Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production\n#########################\nDATABASE IS READY TO USE!\n#########################\nThe following output is now a tail of the alert.log:\nCompleted: alter pluggable database ORCLPDB1 open\n2017-05-20T14:31:25.862061+00:00\nORCLPDB1(3):CREATE SMALLFILE TABLESPACE \"USERS\" LOGGING  DATAFILE  '/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf' SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO\nORCLPDB1(3):Completed: CREATE SMALLFILE TABLESPACE \"USERS\" LOGGING  DATAFILE  '/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf' SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO\nORCLPDB1(3):ALTER DATABASE DEFAULT TABLESPACE \"USERS\"\nORCLPDB1(3):Completed: ALTER DATABASE DEFAULT TABLESPACE \"USERS\"\n2017-05-20T14:31:26.657295+00:00\nALTER SYSTEM SET control_files='/opt/oracle/oradata/ORCLCDB/control01.ctl' SCOPE=SPFILE;\n   ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE\nCompleted:    ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE\n  \n2017-05-20T14:41:16.140414+00:00\nORCLPDB1(3):Resize operation completed for file# 10, old size 337920K, new size 358400K\n```\n\n## Build好的Oracle push到远程Docker Hub\n**当然你build好的镜像也是可以push到自己的Docker Hub中，我私人的Docker Hub如下：**\nhttps://hub.docker.com/repository/docker/zhenzhenman/oracle12\n\n至于如何操作以及Oracle的CDB和PDB，TableSpace等等，请看下回分解。。。\n","source":"_posts/如何在MacOS上使用Docker安装Oracle.md","raw":"---\ntitle: 如何在MacOS上使用Docker安装Oracle\ndate: 2020-08-19 21:10:24\ncomment: true\ncategories: MacOS\ntags:\n- MacOS\n- Docker\n- Oracle\n---\n本篇文章旨在备忘当初是如何在自己的Mac上安装并使用Oracle的。\n<!--more-->\n# 前期准备工作\n\n由于自己的电脑是Mac，并且在工作中也是一直使用Oracle，但是难受的地方是，商业化做的不错的oracle竟然没有MacOS的安装包。兵来将挡，水来土堰，办法总比困难多，想办法解决呀！\n\n## Step 1 clone/下载Oracle的Docker镜像\n主要是需要oracle的Dockerfile， get docker images here:\n https://github.com/oracle/docker-images\n 下载完成后，进入你刚刚下载完成的路径中，如下代码：\n ```bash\n cd docker-images/OracleDatabase/SingleInstance/dockerfiles\n```\n\n ## Step 2 下载Oracle的数据库的instance\n链接URL： http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\ndownload an oracle database and place it in the equvilent version folder, such as 12.2.0.1, then run below command.\n下载的时候需要有Oracle账户，相信即便没有，申请也很容易。\n\n# 开始安装\n下载完成后，把下载的zip包放到 Step1.1 **对应版本号**的文件中，比如你下载的是12.2.0.1版本的，然后使用如下命令：\n```bash\n./buildDockerImage.sh -v 12.2.0.1 -e\n```\n此步骤比较耗时，大概有**24**个步骤要跑。要耐心等待，如果出现链接超时的情况，基本就是第**7/10**步的时候。强烈建议你早晨早点起床，肯定就能秒过，不要问为什么，实践出真知。哈哈哈哈\n\n## Step 3 安装oracle instance并映射Docker中的端口及数据文件到本地端口及本地路径 \n map to local port and data file\n- 注意修改命令行中的路径(第一个冒号之前的路径)\n```bash\ndocker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/${user}/idocker/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee\n```\n注意数据文件已经map到 （/你上面指定路径/oradata）下。此时就算你删除了container，这些数据文件还是会被保留的。\n对应的log如下，注意到了最后，会停在那里，估计run命令最后调用类似docker logs -f oracle这样的命令，会tail -f类似的输出，所以我们可以直接**新建一个窗口**使用了\n```bash\ndocker stop oracle\n```\n再\n```bash\ndocker start oracle\n```\n如果不想敲命令行启动oracle，你也可以使用Docker的Dashboard来点点鼠标就可以了。\n![Docker Dashboard](dockerdashboard.jpg)\n\n**经过如上步骤之后，如果没错误，Oracle就是成功安装了。**\n**因为是使用的Oracle 12 以上版本，所以你需要了解Oracle的Container Database（CDB） 跟 Plugable Database（PDB）的区别。**\n\n参考log如下：\n```bash\n$ docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/example/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee\nORACLE PASSWORD FOR SYS, SYSTEM AND PDBADMIN: scXX7Cj+1m0=1\n \nLSNRCTL for Linux: Version 12.2.0.1.0 - Production on 20-MAY-2017 14:25:30\n \nCopyright (c) 1991, 2016, Oracle.  All rights reserved.\n \nStarting /opt/oracle/product/12.2.0.1/dbhome_1/bin/tnslsnr: please wait...\n \nTNSLSNR for Linux: Version 12.2.0.1.0 - Production\nSystem parameter file is /opt/oracle/product/12.2.0.1/dbhome_1/network/admin/listener.ora\nLog messages written to /opt/oracle/diag/tnslsnr/c9f09116cc83/listener/alert/log.xml\nListening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))\nListening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))\n \n……\n \nSQL> Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production\n#########################\nDATABASE IS READY TO USE!\n#########################\nThe following output is now a tail of the alert.log:\nCompleted: alter pluggable database ORCLPDB1 open\n2017-05-20T14:31:25.862061+00:00\nORCLPDB1(3):CREATE SMALLFILE TABLESPACE \"USERS\" LOGGING  DATAFILE  '/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf' SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO\nORCLPDB1(3):Completed: CREATE SMALLFILE TABLESPACE \"USERS\" LOGGING  DATAFILE  '/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf' SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO\nORCLPDB1(3):ALTER DATABASE DEFAULT TABLESPACE \"USERS\"\nORCLPDB1(3):Completed: ALTER DATABASE DEFAULT TABLESPACE \"USERS\"\n2017-05-20T14:31:26.657295+00:00\nALTER SYSTEM SET control_files='/opt/oracle/oradata/ORCLCDB/control01.ctl' SCOPE=SPFILE;\n   ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE\nCompleted:    ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE\n  \n2017-05-20T14:41:16.140414+00:00\nORCLPDB1(3):Resize operation completed for file# 10, old size 337920K, new size 358400K\n```\n\n## Build好的Oracle push到远程Docker Hub\n**当然你build好的镜像也是可以push到自己的Docker Hub中，我私人的Docker Hub如下：**\nhttps://hub.docker.com/repository/docker/zhenzhenman/oracle12\n\n至于如何操作以及Oracle的CDB和PDB，TableSpace等等，请看下回分解。。。\n","slug":"如何在MacOS上使用Docker安装Oracle","published":1,"updated":"2020-08-29T12:59:37.246Z","_id":"cke2uatpu000akcwae0iqhr3j","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本篇文章旨在备忘当初是如何在自己的Mac上安装并使用Oracle的。</p>\n<a id=\"more\"></a>\n<h1 id=\"前期准备工作\">前期准备工作</h1>\n<p>由于自己的电脑是Mac，并且在工作中也是一直使用Oracle，但是难受的地方是，商业化做的不错的oracle竟然没有MacOS的安装包。兵来将挡，水来土堰，办法总比困难多，想办法解决呀！</p>\n<h2 id=\"Step-1-clone-下载Oracle的Docker镜像\">Step 1 clone/下载Oracle的Docker镜像</h2>\n<p>主要是需要oracle的Dockerfile， get docker images here:<br>\n<a href=\"https://github.com/oracle/docker-images\">https://github.com/oracle/docker-images</a><br>\n下载完成后，进入你刚刚下载完成的路径中，如下代码：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> docker-images/OracleDatabase/SingleInstance/dockerfiles</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-下载Oracle的数据库的instance\">Step 2 下载Oracle的数据库的instance</h2>\n<p>链接URL： <a href=\"http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\">http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html</a><br>\ndownload an oracle database and place it in the equvilent version folder, such as 12.2.0.1, then run below command.<br>\n下载的时候需要有Oracle账户，相信即便没有，申请也很容易。</p>\n<h1 id=\"开始安装\">开始安装</h1>\n<p>下载完成后，把下载的zip包放到 Step1.1 <strong>对应版本号</strong>的文件中，比如你下载的是12.2.0.1版本的，然后使用如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./buildDockerImage.sh -v 12.2.0.1 -e</span><br></pre></td></tr></table></figure>\n<p>此步骤比较耗时，大概有<strong>24</strong>个步骤要跑。要耐心等待，如果出现链接超时的情况，基本就是第<strong>7/10</strong>步的时候。强烈建议你早晨早点起床，肯定就能秒过，不要问为什么，实践出真知。哈哈哈哈</p>\n<h2 id=\"Step-3-安装oracle-instance并映射Docker中的端口及数据文件到本地端口及本地路径\">Step 3 安装oracle instance并映射Docker中的端口及数据文件到本地端口及本地路径</h2>\n<p>map to local port and data file</p>\n<ul>\n<li>注意修改命令行中的路径(第一个冒号之前的路径)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/<span class=\"variable\">$&#123;user&#125;</span>/idocker/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee</span><br></pre></td></tr></table></figure>\n<p>注意数据文件已经map到 （/你上面指定路径/oradata）下。此时就算你删除了container，这些数据文件还是会被保留的。<br>\n对应的log如下，注意到了最后，会停在那里，估计run命令最后调用类似docker logs -f oracle这样的命令，会tail -f类似的输出，所以我们可以直接<strong>新建一个窗口</strong>使用了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop oracle</span><br></pre></td></tr></table></figure>\n<p>再</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start oracle</span><br></pre></td></tr></table></figure>\n<p>如果不想敲命令行启动oracle，你也可以使用Docker的Dashboard来点点鼠标就可以了。<br>\n<img src=\"dockerdashboard.jpg\" alt=\"Docker Dashboard\"></p>\n<p><strong>经过如上步骤之后，如果没错误，Oracle就是成功安装了。</strong><br>\n<strong>因为是使用的Oracle 12 以上版本，所以你需要了解Oracle的Container Database（CDB） 跟 Plugable Database（PDB）的区别。</strong></p>\n<p>参考log如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/example/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee</span><br><span class=\"line\">ORACLE PASSWORD FOR SYS, SYSTEM AND PDBADMIN: scXX7Cj+1m0=1</span><br><span class=\"line\"> </span><br><span class=\"line\">LSNRCTL <span class=\"keyword\">for</span> Linux: Version 12.2.0.1.0 - Production on 20-MAY-2017 14:25:30</span><br><span class=\"line\"> </span><br><span class=\"line\">Copyright (c) 1991, 2016, Oracle.  All rights reserved.</span><br><span class=\"line\"> </span><br><span class=\"line\">Starting /opt/oracle/product/12.2.0.1/dbhome_1/bin/tnslsnr: please <span class=\"built_in\">wait</span>...</span><br><span class=\"line\"> </span><br><span class=\"line\">TNSLSNR <span class=\"keyword\">for</span> Linux: Version 12.2.0.1.0 - Production</span><br><span class=\"line\">System parameter file is /opt/oracle/product/12.2.0.1/dbhome_1/network/admin/listener.ora</span><br><span class=\"line\">Log messages written to /opt/oracle/diag/tnslsnr/c9f09116cc83/listener/alert/log.xml</span><br><span class=\"line\">Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))</span><br><span class=\"line\">Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))</span><br><span class=\"line\"> </span><br><span class=\"line\">……</span><br><span class=\"line\"> </span><br><span class=\"line\">SQL&gt; Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production</span><br><span class=\"line\"><span class=\"comment\">#########################</span></span><br><span class=\"line\">DATABASE IS READY TO USE!</span><br><span class=\"line\"><span class=\"comment\">#########################</span></span><br><span class=\"line\">The following output is now a tail of the alert.log:</span><br><span class=\"line\">Completed: alter pluggable database ORCLPDB1 open</span><br><span class=\"line\">2017-05-20T14:31:25.862061+00:00</span><br><span class=\"line\">ORCLPDB1(3):CREATE SMALLFILE TABLESPACE <span class=\"string\">&quot;USERS&quot;</span> LOGGING  DATAFILE  <span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf&#x27;</span> SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO</span><br><span class=\"line\">ORCLPDB1(3):Completed: CREATE SMALLFILE TABLESPACE <span class=\"string\">&quot;USERS&quot;</span> LOGGING  DATAFILE  <span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf&#x27;</span> SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO</span><br><span class=\"line\">ORCLPDB1(3):ALTER DATABASE DEFAULT TABLESPACE <span class=\"string\">&quot;USERS&quot;</span></span><br><span class=\"line\">ORCLPDB1(3):Completed: ALTER DATABASE DEFAULT TABLESPACE <span class=\"string\">&quot;USERS&quot;</span></span><br><span class=\"line\">2017-05-20T14:31:26.657295+00:00</span><br><span class=\"line\">ALTER SYSTEM SET control_files=<span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/control01.ctl&#x27;</span> SCOPE=SPFILE;</span><br><span class=\"line\">   ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE</span><br><span class=\"line\">Completed:    ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE</span><br><span class=\"line\">  </span><br><span class=\"line\">2017-05-20T14:41:16.140414+00:00</span><br><span class=\"line\">ORCLPDB1(3):Resize operation completed <span class=\"keyword\">for</span> file<span class=\"comment\"># 10, old size 337920K, new size 358400K</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Build好的Oracle-push到远程Docker-Hub\">Build好的Oracle push到远程Docker Hub</h2>\n<p><strong>当然你build好的镜像也是可以push到自己的Docker Hub中，我私人的Docker Hub如下：</strong><br>\n<a href=\"https://hub.docker.com/repository/docker/zhenzhenman/oracle12\">https://hub.docker.com/repository/docker/zhenzhenman/oracle12</a></p>\n<p>至于如何操作以及Oracle的CDB和PDB，TableSpace等等，请看下回分解。。。</p>\n","site":{"data":{}},"excerpt":"<p>本篇文章旨在备忘当初是如何在自己的Mac上安装并使用Oracle的。</p>","more":"<h1 id=\"前期准备工作\">前期准备工作</h1>\n<p>由于自己的电脑是Mac，并且在工作中也是一直使用Oracle，但是难受的地方是，商业化做的不错的oracle竟然没有MacOS的安装包。兵来将挡，水来土堰，办法总比困难多，想办法解决呀！</p>\n<h2 id=\"Step-1-clone-下载Oracle的Docker镜像\">Step 1 clone/下载Oracle的Docker镜像</h2>\n<p>主要是需要oracle的Dockerfile， get docker images here:<br>\n<a href=\"https://github.com/oracle/docker-images\">https://github.com/oracle/docker-images</a><br>\n下载完成后，进入你刚刚下载完成的路径中，如下代码：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> docker-images/OracleDatabase/SingleInstance/dockerfiles</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-下载Oracle的数据库的instance\">Step 2 下载Oracle的数据库的instance</h2>\n<p>链接URL： <a href=\"http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\">http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html</a><br>\ndownload an oracle database and place it in the equvilent version folder, such as 12.2.0.1, then run below command.<br>\n下载的时候需要有Oracle账户，相信即便没有，申请也很容易。</p>\n<h1 id=\"开始安装\">开始安装</h1>\n<p>下载完成后，把下载的zip包放到 Step1.1 <strong>对应版本号</strong>的文件中，比如你下载的是12.2.0.1版本的，然后使用如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./buildDockerImage.sh -v 12.2.0.1 -e</span><br></pre></td></tr></table></figure>\n<p>此步骤比较耗时，大概有<strong>24</strong>个步骤要跑。要耐心等待，如果出现链接超时的情况，基本就是第<strong>7/10</strong>步的时候。强烈建议你早晨早点起床，肯定就能秒过，不要问为什么，实践出真知。哈哈哈哈</p>\n<h2 id=\"Step-3-安装oracle-instance并映射Docker中的端口及数据文件到本地端口及本地路径\">Step 3 安装oracle instance并映射Docker中的端口及数据文件到本地端口及本地路径</h2>\n<p>map to local port and data file</p>\n<ul>\n<li>注意修改命令行中的路径(第一个冒号之前的路径)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/<span class=\"variable\">$&#123;user&#125;</span>/idocker/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee</span><br></pre></td></tr></table></figure>\n<p>注意数据文件已经map到 （/你上面指定路径/oradata）下。此时就算你删除了container，这些数据文件还是会被保留的。<br>\n对应的log如下，注意到了最后，会停在那里，估计run命令最后调用类似docker logs -f oracle这样的命令，会tail -f类似的输出，所以我们可以直接<strong>新建一个窗口</strong>使用了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop oracle</span><br></pre></td></tr></table></figure>\n<p>再</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start oracle</span><br></pre></td></tr></table></figure>\n<p>如果不想敲命令行启动oracle，你也可以使用Docker的Dashboard来点点鼠标就可以了。<br>\n<img src=\"dockerdashboard.jpg\" alt=\"Docker Dashboard\"></p>\n<p><strong>经过如上步骤之后，如果没错误，Oracle就是成功安装了。</strong><br>\n<strong>因为是使用的Oracle 12 以上版本，所以你需要了解Oracle的Container Database（CDB） 跟 Plugable Database（PDB）的区别。</strong></p>\n<p>参考log如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --name oracle -p 1521:1521 -p 5500:5500 -v /Users/example/oradata:/opt/oracle/oradata oracle/database:12.2.0.1-ee</span><br><span class=\"line\">ORACLE PASSWORD FOR SYS, SYSTEM AND PDBADMIN: scXX7Cj+1m0=1</span><br><span class=\"line\"> </span><br><span class=\"line\">LSNRCTL <span class=\"keyword\">for</span> Linux: Version 12.2.0.1.0 - Production on 20-MAY-2017 14:25:30</span><br><span class=\"line\"> </span><br><span class=\"line\">Copyright (c) 1991, 2016, Oracle.  All rights reserved.</span><br><span class=\"line\"> </span><br><span class=\"line\">Starting /opt/oracle/product/12.2.0.1/dbhome_1/bin/tnslsnr: please <span class=\"built_in\">wait</span>...</span><br><span class=\"line\"> </span><br><span class=\"line\">TNSLSNR <span class=\"keyword\">for</span> Linux: Version 12.2.0.1.0 - Production</span><br><span class=\"line\">System parameter file is /opt/oracle/product/12.2.0.1/dbhome_1/network/admin/listener.ora</span><br><span class=\"line\">Log messages written to /opt/oracle/diag/tnslsnr/c9f09116cc83/listener/alert/log.xml</span><br><span class=\"line\">Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))</span><br><span class=\"line\">Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))</span><br><span class=\"line\"> </span><br><span class=\"line\">……</span><br><span class=\"line\"> </span><br><span class=\"line\">SQL&gt; Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production</span><br><span class=\"line\"><span class=\"comment\">#########################</span></span><br><span class=\"line\">DATABASE IS READY TO USE!</span><br><span class=\"line\"><span class=\"comment\">#########################</span></span><br><span class=\"line\">The following output is now a tail of the alert.log:</span><br><span class=\"line\">Completed: alter pluggable database ORCLPDB1 open</span><br><span class=\"line\">2017-05-20T14:31:25.862061+00:00</span><br><span class=\"line\">ORCLPDB1(3):CREATE SMALLFILE TABLESPACE <span class=\"string\">&quot;USERS&quot;</span> LOGGING  DATAFILE  <span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf&#x27;</span> SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO</span><br><span class=\"line\">ORCLPDB1(3):Completed: CREATE SMALLFILE TABLESPACE <span class=\"string\">&quot;USERS&quot;</span> LOGGING  DATAFILE  <span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/ORCLPDB1/users01.dbf&#x27;</span> SIZE 5M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED  EXTENT MANAGEMENT LOCAL  SEGMENT SPACE MANAGEMENT  AUTO</span><br><span class=\"line\">ORCLPDB1(3):ALTER DATABASE DEFAULT TABLESPACE <span class=\"string\">&quot;USERS&quot;</span></span><br><span class=\"line\">ORCLPDB1(3):Completed: ALTER DATABASE DEFAULT TABLESPACE <span class=\"string\">&quot;USERS&quot;</span></span><br><span class=\"line\">2017-05-20T14:31:26.657295+00:00</span><br><span class=\"line\">ALTER SYSTEM SET control_files=<span class=\"string\">&#x27;/opt/oracle/oradata/ORCLCDB/control01.ctl&#x27;</span> SCOPE=SPFILE;</span><br><span class=\"line\">   ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE</span><br><span class=\"line\">Completed:    ALTER PLUGGABLE DATABASE ORCLPDB1 SAVE STATE</span><br><span class=\"line\">  </span><br><span class=\"line\">2017-05-20T14:41:16.140414+00:00</span><br><span class=\"line\">ORCLPDB1(3):Resize operation completed <span class=\"keyword\">for</span> file<span class=\"comment\"># 10, old size 337920K, new size 358400K</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Build好的Oracle-push到远程Docker-Hub\">Build好的Oracle push到远程Docker Hub</h2>\n<p><strong>当然你build好的镜像也是可以push到自己的Docker Hub中，我私人的Docker Hub如下：</strong><br>\n<a href=\"https://hub.docker.com/repository/docker/zhenzhenman/oracle12\">https://hub.docker.com/repository/docker/zhenzhenman/oracle12</a></p>\n<p>至于如何操作以及Oracle的CDB和PDB，TableSpace等等，请看下回分解。。。</p>"},{"title":"Oracle CDB PDB 表空间创建用户及角色","date":"2020-08-25T13:39:31.000Z","comment":true,"_content":"记录如何使用11g以上版本oracle\n<!--more-->\n\n**在进行如下操作之前，需保证Docker在running，然后启动ORACLE**\n\n# 登录ORACLE\n``` bash\ndocker container ls\n```\n``` bash\ndocker exec -it 3024386a1d24 /bin/bash\n```\n```bash\ndockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker container ls\nCONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                        PORTS                                            NAMES\n3024386a1d24        oracle/database:12.2.0.1-ee   \"/bin/sh -c 'exec $O…\"   43 minutes ago      Up About a minute (healthy)   0.0.0.0:1521->1521/tcp, 0.0.0.0:5500->5500/tcp   oracle\ndockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker exec -it 3024386a1d24 /bin/bash\n[oracle@3024386a1d24 ~]$ sqlplus / as sysdba\n\nSQL*Plus: Release 12.2.0.1.0 Production on Sat Aug 29 12:32:19 2020\n\nCopyright (c) 1982, 2016, Oracle.  All rights reserved.\n\nERROR:\nORA-12162: TNS:net service name is incorrectly specified\n\n\nEnter user-name: ^C^C^C\n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ ps -ef | grep ora_\noracle      23     1  0 12:30 ?        00:00:00 ora_pmon_ORCLCDB\noracle      25     1  0 12:30 ?        00:00:00 ora_clmn_ORCLCDB\noracle      27     1  0 12:30 ?        00:00:00 ora_psp0_ORCLCDB\noracle      29     1  0 12:30 ?        00:00:00 ora_vktm_ORCLCDB\noracle      33     1  0 12:30 ?        00:00:00 ora_gen0_ORCLCDB\noracle      35     1  0 12:30 ?        00:00:00 ora_mman_ORCLCDB\noracle      39     1  0 12:30 ?        00:00:00 ora_gen1_ORCLCDB\noracle      43     1  0 12:30 ?        00:00:00 ora_diag_ORCLCDB\noracle      45     1  0 12:30 ?        00:00:00 ora_ofsd_ORCLCDB\noracle      49     1  0 12:30 ?        00:00:00 ora_dbrm_ORCLCDB\noracle      51     1  0 12:30 ?        00:00:00 ora_vkrm_ORCLCDB\noracle      53     1  0 12:30 ?        00:00:00 ora_svcb_ORCLCDB\noracle      55     1  0 12:30 ?        00:00:00 ora_pman_ORCLCDB\noracle      57     1  0 12:30 ?        00:00:00 ora_dia0_ORCLCDB\noracle      59     1  0 12:30 ?        00:00:00 ora_dbw0_ORCLCDB\noracle      61     1  0 12:30 ?        00:00:00 ora_lgwr_ORCLCDB\noracle      63     1  0 12:30 ?        00:00:00 ora_ckpt_ORCLCDB\noracle      65     1  0 12:30 ?        00:00:00 ora_lg00_ORCLCDB\noracle      67     1  0 12:30 ?        00:00:00 ora_smon_ORCLCDB\noracle      69     1  0 12:30 ?        00:00:00 ora_lg01_ORCLCDB\noracle      71     1  0 12:30 ?        00:00:00 ora_smco_ORCLCDB\noracle      73     1  0 12:30 ?        00:00:00 ora_reco_ORCLCDB\noracle      75     1  0 12:30 ?        00:00:00 ora_w000_ORCLCDB\noracle      77     1  0 12:30 ?        00:00:00 ora_lreg_ORCLCDB\noracle      79     1  0 12:30 ?        00:00:00 ora_w001_ORCLCDB\noracle      81     1  0 12:30 ?        00:00:00 ora_pxmn_ORCLCDB\noracle      85     1  0 12:30 ?        00:00:01 ora_mmon_ORCLCDB\noracle      87     1  0 12:30 ?        00:00:00 ora_mmnl_ORCLCDB\noracle      89     1  0 12:30 ?        00:00:00 ora_d000_ORCLCDB\noracle      91     1  0 12:30 ?        00:00:00 ora_s000_ORCLCDB\noracle      93     1  0 12:30 ?        00:00:00 ora_tmon_ORCLCDB\noracle     103     1  0 12:30 ?        00:00:00 ora_tt00_ORCLCDB\noracle     105     1  0 12:30 ?        00:00:00 ora_tt01_ORCLCDB\noracle     107     1  0 12:30 ?        00:00:00 ora_tt02_ORCLCDB\noracle     109     1  0 12:30 ?        00:00:00 ora_aqpc_ORCLCDB\noracle     113     1  0 12:30 ?        00:00:00 ora_p000_ORCLCDB\noracle     115     1  0 12:30 ?        00:00:00 ora_p001_ORCLCDB\noracle     117     1  0 12:30 ?        00:00:00 ora_p002_ORCLCDB\noracle     119     1  0 12:30 ?        00:00:00 ora_p003_ORCLCDB\noracle     121     1  0 12:30 ?        00:00:00 ora_p004_ORCLCDB\noracle     123     1  0 12:30 ?        00:00:00 ora_p005_ORCLCDB\noracle     125     1  0 12:30 ?        00:00:00 ora_p006_ORCLCDB\noracle     127     1  0 12:30 ?        00:00:00 ora_p007_ORCLCDB\noracle     129     1  0 12:30 ?        00:00:00 ora_p008_ORCLCDB\noracle     131     1  0 12:30 ?        00:00:00 ora_p009_ORCLCDB\noracle     133     1  0 12:30 ?        00:00:00 ora_p00a_ORCLCDB\noracle     135     1  0 12:30 ?        00:00:00 ora_p00b_ORCLCDB\noracle     137     1  0 12:30 ?        00:00:00 ora_p00c_ORCLCDB\noracle     139     1  0 12:30 ?        00:00:00 ora_p00d_ORCLCDB\noracle     141     1  0 12:30 ?        00:00:00 ora_p00e_ORCLCDB\noracle     143     1  0 12:30 ?        00:00:00 ora_p00f_ORCLCDB\noracle     286     1  1 12:30 ?        00:00:01 ora_cjq0_ORCLCDB\noracle     368     1  0 12:30 ?        00:00:00 ora_qm02_ORCLCDB\noracle     372     1  0 12:30 ?        00:00:00 ora_q002_ORCLCDB\noracle     374     1  0 12:30 ?        00:00:00 ora_q003_ORCLCDB\noracle     376     1  0 12:30 ?        00:00:00 ora_q004_ORCLCDB\noracle     411     1  0 12:31 ?        00:00:00 ora_w002_ORCLCDB\noracle     464   412  0 12:32 pts/0    00:00:00 grep --color=auto ora_\n[oracle@3024386a1d24 ~]$ export ORACLE_SID=ORCLCDB\n[oracle@3024386a1d24 ~]$ sqlplus / as sysdba\n```\n\n# 修改Sys/System的密码\n修改密码是便于自己使用跟设置SqlDeveloper，使用JDBC\n```sql\nALTER USER sys IDENTIFIED BY YOURPASSWORD\n```\n\n# 预备知识\n需要知道CDB跟PDB是怎么回事，Oracle 12C引入了CDB与PDB的新特性，在ORACLE 12C数据库引入的多租用户环境（Multitenant Environment）中，允许一个数据库容器（CDB）承载多个可插拔数据库（PDB）。CDB全称为Container Database，中文翻译为数据库容器，PDB全称为Pluggable Database，即可插拔数据库。在ORACLE 12C之前，实例与数据库是一对一或多对一关系（RAC）：即一个实例只能与一个数据库相关联，数据库可以被多个实例所加载。而实例与数据库不可能是一对多的关系。当进入ORACLE 12C后，实例与数据库可以是一对多的关系。下面是官方文档关于CDB与PDB的关系图\n ![ORACLE](oracle.jpg)\n\n其实大家如果对SQL SERVER比较熟悉的话，这种CDB与PDB是不是感觉和SQL SERVER的单实例多数据库架构是一回事呢。像PDB$SEED可以看成是master、msdb等系统数据库，PDBS可以看成用户创建的数据库。而可插拔的概念与SQL SERVER中的用户数据库的分离、附加其实就是那么一回事。看来ORACLE也“抄袭”了一把SQL SERVER的概念，只是改头换面的包装了一番。\n\n## CDB组件（Components of a CDB）\n一个CDB数据库容器包含了下面一些组件：\n**ROOT组件：**\n    ROOT又叫CDB$ROOT, 存储着ORACLE提供的元数据和Common User,元数据的一个例子是ORACLE提供的PL/SQL包的源代码，Common User 是指在每个容器中都存在的用户。\n\n**SEED组件：**\n    Seed又叫PDB$SEED,这个是你创建PDBS数据库的模板，你不能在Seed中添加或修改一个对象。一个CDB中有且只能有一个Seed. 这个感念，个人感觉非常类似SQL SERVER中的model数据库。\n\n**PDBS：**\n    CDB中可以有一个或多个PDBS，PDBS向后兼容，可以像以前在数据库中那样操作PDBS，这里指大多数常规操作。\n这些组件中的每一个都可以被称为一个容器。因此，ROOT(根)是一个容器，Seed(种子)是一个容器，每个PDB是一个容器。每个容器在CDB中都有一个独一无二的的ID和名称。\n\n### 查看当前容器\n```sql\nsql> SHOW CON_NAME;\n\nCON_NAME \n------------------------------\nCDB$ROOT\n```\n### 查看CDB中可用的PDB\n```sql\nsql> SELECT\n    CON_ID,DBID,NAME,OPEN_MODE\nFROM\n    V$PDBS;\n```\n ![PDBS](pdbs.png)\n\n## 切换至PDB\n因为sql开发是需要在PDB上进行，所以需要切换至PDB中，只写两种方式，其中**方式1**是笔者常用\n方式1:\n```sql\nALTER SESSION SET CONTAINER = ORCLPDB1;\n```\n方式2:\n```sql\nalter pluggable database ORCLPDB1 open;;\n```\n\n# 使用SqlDeveloper 方便写sql开发\n## 配置SqlDeveloper\n为了区分，建议按DB类型进行分开, cdb的用户名跟密码是可以登录pdb的，下面都可以使用前面设置好的sys的用户名，当然你也可以只登录到CDB，然后使用上面的切换方式\n ![SQLDEVELOPER](sqldeveloperoverview.png)\n### 使用Basic类型配置CDB\n**注意正确选择Role**\n\n![CDB Config](cdbconfig.png)\n注：图中的**Service name/SID（当前是一样的）** 就是你在上面命令行中export的**ORACLE_SID**\n### 使用Basic类型配置PDB\n![PDB Config](pdbconfig.png)\n### 使用JDBC配置PDB/CDB\n**只需要把上图中的Connection Type改成Advanced**\nJDBC URL:\n```bash\njdbc:oracle:thin:@localhost:1521/orclpdb1\n```\n## 使用Sql Developer进行开发\n### 创建TableSpace \n数据文件和日志文件是数据库中最关键的文件。它们是数据存储的地方。每一个数据库至少有一个与之相关的数据文件，通常情况下不仅仅一个，有非常多。数据在数据文件里是怎样组织的？\n表空间就是一个用于管理数据文件的逻辑容器，它是与数据文件相关联的，一个表空间至少要有一个数据文件与之关联。\n与user和schema相比，tablespace是一个相对更加底层的概念，可以通过create tablespace创建表空间。\n创建名为Developer的table space：\n```sql\nCREATE TABLESPACE DEVELOPER DATAFILE\n    '/opt/oracle/product/12.2.0.1/dbhome_1/dbs/DEVELOPER.dbf' SIZE 4 G\n        AUTOEXTEND ON NEXT 200 M\nLOGGING EXTENT MANAGEMENT LOCAL AUTOALLOCATE;\n```\n当然如果使用**Navicat**的话就不需要写这个sql了。\n\n### Schema\nOracle中的schema是若干个数据库对象的集合，用于管理数据库中的各种对象，这里的对象包括：表（table）、视图(View)、存储过程(Stored Procedure)、序列(Sequence)、索引(Index)等等。一个schema下包括若干个表、视图、存储过程等对象。\n其实，一个tablespace创建出来之后，就存在一个同名的schema。当然一个表空间上可以存在多个schema。\n\n### 常见User，及Role。\n创建用户需要指定tablespace，可理解成在哪个数据库使用这个user\n```sql\nCREATE USER username IDENTIFIED BY password DEFAULT TABLESPACE DEVELOPER TEMPORARY TABLESPACE TEMP;\n```\n创建Role，主要作用就是权限管理，不同的role的grant不同的权限，不同的role可以grant给user，便可以实现不同权限管理的功能。比如，创建一个Read-only的role，可以赋给普通用户，只能查询，不能update数据，场景可以是对production的数据赋予read-only权限，很容易理解production都是真实的生产数据，不能随意更改，只能查询。\n```sql\n--create role\nCREATE ROLE DEVELOPER_ROLE;\n\n-- availible PRIVILEGE\nSELECT  * FROM  SYS.ROLE_SYS_PRIVS；\n\n-- grant role\nGRANT \n     CREATE ANY TABLE, CREATE ANY SEQUENCE, CREATE PROCEDURE, CREATE ANY TYPE, SELECT ANY TABLE,SELECT ANY SEQUENCE, UPDATE ANY TABLE, INSERT ANY TABLE \nTO DEVELOPER_ROLE;\n\n--grant role to user\nGRANT DEVELOPER_ROLE TO DEVELOPER;\nSET ROLE DEVELOPER_ROLE;\n\n--设置默认的role\nALTER USER DEVELOPER DEFAULT ROLE DEVELOPER_ROLE;\n\n--如需要可以回收权限 from user\nrevoke CREATE PROCEDURE from DEVELOPER;\n```\n可以从可用的权限中选择不同的privilege赋给role，然后把role再赋给user，此时user便有了赋予的权限，也不再需要一个一个的role赋给user。user可以拥有多个role，如需要可设置default的role。\n\n","source":"_posts/Oracle-CDB-PDB-表空间创建用户及角色.md","raw":"---\ntitle: Oracle CDB PDB 表空间创建用户及角色\ndate: 2020-08-25 21:39:31\ncomment: true\ncategories: ORACLE\ntags:\n- ORACLE\n- TABLESPACE\n- SCHEMA\n- ROLE\n---\n记录如何使用11g以上版本oracle\n<!--more-->\n\n**在进行如下操作之前，需保证Docker在running，然后启动ORACLE**\n\n# 登录ORACLE\n``` bash\ndocker container ls\n```\n``` bash\ndocker exec -it 3024386a1d24 /bin/bash\n```\n```bash\ndockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker container ls\nCONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                        PORTS                                            NAMES\n3024386a1d24        oracle/database:12.2.0.1-ee   \"/bin/sh -c 'exec $O…\"   43 minutes ago      Up About a minute (healthy)   0.0.0.0:1521->1521/tcp, 0.0.0.0:5500->5500/tcp   oracle\ndockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker exec -it 3024386a1d24 /bin/bash\n[oracle@3024386a1d24 ~]$ sqlplus / as sysdba\n\nSQL*Plus: Release 12.2.0.1.0 Production on Sat Aug 29 12:32:19 2020\n\nCopyright (c) 1982, 2016, Oracle.  All rights reserved.\n\nERROR:\nORA-12162: TNS:net service name is incorrectly specified\n\n\nEnter user-name: ^C^C^C\n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ \n[oracle@3024386a1d24 ~]$ ps -ef | grep ora_\noracle      23     1  0 12:30 ?        00:00:00 ora_pmon_ORCLCDB\noracle      25     1  0 12:30 ?        00:00:00 ora_clmn_ORCLCDB\noracle      27     1  0 12:30 ?        00:00:00 ora_psp0_ORCLCDB\noracle      29     1  0 12:30 ?        00:00:00 ora_vktm_ORCLCDB\noracle      33     1  0 12:30 ?        00:00:00 ora_gen0_ORCLCDB\noracle      35     1  0 12:30 ?        00:00:00 ora_mman_ORCLCDB\noracle      39     1  0 12:30 ?        00:00:00 ora_gen1_ORCLCDB\noracle      43     1  0 12:30 ?        00:00:00 ora_diag_ORCLCDB\noracle      45     1  0 12:30 ?        00:00:00 ora_ofsd_ORCLCDB\noracle      49     1  0 12:30 ?        00:00:00 ora_dbrm_ORCLCDB\noracle      51     1  0 12:30 ?        00:00:00 ora_vkrm_ORCLCDB\noracle      53     1  0 12:30 ?        00:00:00 ora_svcb_ORCLCDB\noracle      55     1  0 12:30 ?        00:00:00 ora_pman_ORCLCDB\noracle      57     1  0 12:30 ?        00:00:00 ora_dia0_ORCLCDB\noracle      59     1  0 12:30 ?        00:00:00 ora_dbw0_ORCLCDB\noracle      61     1  0 12:30 ?        00:00:00 ora_lgwr_ORCLCDB\noracle      63     1  0 12:30 ?        00:00:00 ora_ckpt_ORCLCDB\noracle      65     1  0 12:30 ?        00:00:00 ora_lg00_ORCLCDB\noracle      67     1  0 12:30 ?        00:00:00 ora_smon_ORCLCDB\noracle      69     1  0 12:30 ?        00:00:00 ora_lg01_ORCLCDB\noracle      71     1  0 12:30 ?        00:00:00 ora_smco_ORCLCDB\noracle      73     1  0 12:30 ?        00:00:00 ora_reco_ORCLCDB\noracle      75     1  0 12:30 ?        00:00:00 ora_w000_ORCLCDB\noracle      77     1  0 12:30 ?        00:00:00 ora_lreg_ORCLCDB\noracle      79     1  0 12:30 ?        00:00:00 ora_w001_ORCLCDB\noracle      81     1  0 12:30 ?        00:00:00 ora_pxmn_ORCLCDB\noracle      85     1  0 12:30 ?        00:00:01 ora_mmon_ORCLCDB\noracle      87     1  0 12:30 ?        00:00:00 ora_mmnl_ORCLCDB\noracle      89     1  0 12:30 ?        00:00:00 ora_d000_ORCLCDB\noracle      91     1  0 12:30 ?        00:00:00 ora_s000_ORCLCDB\noracle      93     1  0 12:30 ?        00:00:00 ora_tmon_ORCLCDB\noracle     103     1  0 12:30 ?        00:00:00 ora_tt00_ORCLCDB\noracle     105     1  0 12:30 ?        00:00:00 ora_tt01_ORCLCDB\noracle     107     1  0 12:30 ?        00:00:00 ora_tt02_ORCLCDB\noracle     109     1  0 12:30 ?        00:00:00 ora_aqpc_ORCLCDB\noracle     113     1  0 12:30 ?        00:00:00 ora_p000_ORCLCDB\noracle     115     1  0 12:30 ?        00:00:00 ora_p001_ORCLCDB\noracle     117     1  0 12:30 ?        00:00:00 ora_p002_ORCLCDB\noracle     119     1  0 12:30 ?        00:00:00 ora_p003_ORCLCDB\noracle     121     1  0 12:30 ?        00:00:00 ora_p004_ORCLCDB\noracle     123     1  0 12:30 ?        00:00:00 ora_p005_ORCLCDB\noracle     125     1  0 12:30 ?        00:00:00 ora_p006_ORCLCDB\noracle     127     1  0 12:30 ?        00:00:00 ora_p007_ORCLCDB\noracle     129     1  0 12:30 ?        00:00:00 ora_p008_ORCLCDB\noracle     131     1  0 12:30 ?        00:00:00 ora_p009_ORCLCDB\noracle     133     1  0 12:30 ?        00:00:00 ora_p00a_ORCLCDB\noracle     135     1  0 12:30 ?        00:00:00 ora_p00b_ORCLCDB\noracle     137     1  0 12:30 ?        00:00:00 ora_p00c_ORCLCDB\noracle     139     1  0 12:30 ?        00:00:00 ora_p00d_ORCLCDB\noracle     141     1  0 12:30 ?        00:00:00 ora_p00e_ORCLCDB\noracle     143     1  0 12:30 ?        00:00:00 ora_p00f_ORCLCDB\noracle     286     1  1 12:30 ?        00:00:01 ora_cjq0_ORCLCDB\noracle     368     1  0 12:30 ?        00:00:00 ora_qm02_ORCLCDB\noracle     372     1  0 12:30 ?        00:00:00 ora_q002_ORCLCDB\noracle     374     1  0 12:30 ?        00:00:00 ora_q003_ORCLCDB\noracle     376     1  0 12:30 ?        00:00:00 ora_q004_ORCLCDB\noracle     411     1  0 12:31 ?        00:00:00 ora_w002_ORCLCDB\noracle     464   412  0 12:32 pts/0    00:00:00 grep --color=auto ora_\n[oracle@3024386a1d24 ~]$ export ORACLE_SID=ORCLCDB\n[oracle@3024386a1d24 ~]$ sqlplus / as sysdba\n```\n\n# 修改Sys/System的密码\n修改密码是便于自己使用跟设置SqlDeveloper，使用JDBC\n```sql\nALTER USER sys IDENTIFIED BY YOURPASSWORD\n```\n\n# 预备知识\n需要知道CDB跟PDB是怎么回事，Oracle 12C引入了CDB与PDB的新特性，在ORACLE 12C数据库引入的多租用户环境（Multitenant Environment）中，允许一个数据库容器（CDB）承载多个可插拔数据库（PDB）。CDB全称为Container Database，中文翻译为数据库容器，PDB全称为Pluggable Database，即可插拔数据库。在ORACLE 12C之前，实例与数据库是一对一或多对一关系（RAC）：即一个实例只能与一个数据库相关联，数据库可以被多个实例所加载。而实例与数据库不可能是一对多的关系。当进入ORACLE 12C后，实例与数据库可以是一对多的关系。下面是官方文档关于CDB与PDB的关系图\n ![ORACLE](oracle.jpg)\n\n其实大家如果对SQL SERVER比较熟悉的话，这种CDB与PDB是不是感觉和SQL SERVER的单实例多数据库架构是一回事呢。像PDB$SEED可以看成是master、msdb等系统数据库，PDBS可以看成用户创建的数据库。而可插拔的概念与SQL SERVER中的用户数据库的分离、附加其实就是那么一回事。看来ORACLE也“抄袭”了一把SQL SERVER的概念，只是改头换面的包装了一番。\n\n## CDB组件（Components of a CDB）\n一个CDB数据库容器包含了下面一些组件：\n**ROOT组件：**\n    ROOT又叫CDB$ROOT, 存储着ORACLE提供的元数据和Common User,元数据的一个例子是ORACLE提供的PL/SQL包的源代码，Common User 是指在每个容器中都存在的用户。\n\n**SEED组件：**\n    Seed又叫PDB$SEED,这个是你创建PDBS数据库的模板，你不能在Seed中添加或修改一个对象。一个CDB中有且只能有一个Seed. 这个感念，个人感觉非常类似SQL SERVER中的model数据库。\n\n**PDBS：**\n    CDB中可以有一个或多个PDBS，PDBS向后兼容，可以像以前在数据库中那样操作PDBS，这里指大多数常规操作。\n这些组件中的每一个都可以被称为一个容器。因此，ROOT(根)是一个容器，Seed(种子)是一个容器，每个PDB是一个容器。每个容器在CDB中都有一个独一无二的的ID和名称。\n\n### 查看当前容器\n```sql\nsql> SHOW CON_NAME;\n\nCON_NAME \n------------------------------\nCDB$ROOT\n```\n### 查看CDB中可用的PDB\n```sql\nsql> SELECT\n    CON_ID,DBID,NAME,OPEN_MODE\nFROM\n    V$PDBS;\n```\n ![PDBS](pdbs.png)\n\n## 切换至PDB\n因为sql开发是需要在PDB上进行，所以需要切换至PDB中，只写两种方式，其中**方式1**是笔者常用\n方式1:\n```sql\nALTER SESSION SET CONTAINER = ORCLPDB1;\n```\n方式2:\n```sql\nalter pluggable database ORCLPDB1 open;;\n```\n\n# 使用SqlDeveloper 方便写sql开发\n## 配置SqlDeveloper\n为了区分，建议按DB类型进行分开, cdb的用户名跟密码是可以登录pdb的，下面都可以使用前面设置好的sys的用户名，当然你也可以只登录到CDB，然后使用上面的切换方式\n ![SQLDEVELOPER](sqldeveloperoverview.png)\n### 使用Basic类型配置CDB\n**注意正确选择Role**\n\n![CDB Config](cdbconfig.png)\n注：图中的**Service name/SID（当前是一样的）** 就是你在上面命令行中export的**ORACLE_SID**\n### 使用Basic类型配置PDB\n![PDB Config](pdbconfig.png)\n### 使用JDBC配置PDB/CDB\n**只需要把上图中的Connection Type改成Advanced**\nJDBC URL:\n```bash\njdbc:oracle:thin:@localhost:1521/orclpdb1\n```\n## 使用Sql Developer进行开发\n### 创建TableSpace \n数据文件和日志文件是数据库中最关键的文件。它们是数据存储的地方。每一个数据库至少有一个与之相关的数据文件，通常情况下不仅仅一个，有非常多。数据在数据文件里是怎样组织的？\n表空间就是一个用于管理数据文件的逻辑容器，它是与数据文件相关联的，一个表空间至少要有一个数据文件与之关联。\n与user和schema相比，tablespace是一个相对更加底层的概念，可以通过create tablespace创建表空间。\n创建名为Developer的table space：\n```sql\nCREATE TABLESPACE DEVELOPER DATAFILE\n    '/opt/oracle/product/12.2.0.1/dbhome_1/dbs/DEVELOPER.dbf' SIZE 4 G\n        AUTOEXTEND ON NEXT 200 M\nLOGGING EXTENT MANAGEMENT LOCAL AUTOALLOCATE;\n```\n当然如果使用**Navicat**的话就不需要写这个sql了。\n\n### Schema\nOracle中的schema是若干个数据库对象的集合，用于管理数据库中的各种对象，这里的对象包括：表（table）、视图(View)、存储过程(Stored Procedure)、序列(Sequence)、索引(Index)等等。一个schema下包括若干个表、视图、存储过程等对象。\n其实，一个tablespace创建出来之后，就存在一个同名的schema。当然一个表空间上可以存在多个schema。\n\n### 常见User，及Role。\n创建用户需要指定tablespace，可理解成在哪个数据库使用这个user\n```sql\nCREATE USER username IDENTIFIED BY password DEFAULT TABLESPACE DEVELOPER TEMPORARY TABLESPACE TEMP;\n```\n创建Role，主要作用就是权限管理，不同的role的grant不同的权限，不同的role可以grant给user，便可以实现不同权限管理的功能。比如，创建一个Read-only的role，可以赋给普通用户，只能查询，不能update数据，场景可以是对production的数据赋予read-only权限，很容易理解production都是真实的生产数据，不能随意更改，只能查询。\n```sql\n--create role\nCREATE ROLE DEVELOPER_ROLE;\n\n-- availible PRIVILEGE\nSELECT  * FROM  SYS.ROLE_SYS_PRIVS；\n\n-- grant role\nGRANT \n     CREATE ANY TABLE, CREATE ANY SEQUENCE, CREATE PROCEDURE, CREATE ANY TYPE, SELECT ANY TABLE,SELECT ANY SEQUENCE, UPDATE ANY TABLE, INSERT ANY TABLE \nTO DEVELOPER_ROLE;\n\n--grant role to user\nGRANT DEVELOPER_ROLE TO DEVELOPER;\nSET ROLE DEVELOPER_ROLE;\n\n--设置默认的role\nALTER USER DEVELOPER DEFAULT ROLE DEVELOPER_ROLE;\n\n--如需要可以回收权限 from user\nrevoke CREATE PROCEDURE from DEVELOPER;\n```\n可以从可用的权限中选择不同的privilege赋给role，然后把role再赋给user，此时user便有了赋予的权限，也不再需要一个一个的role赋给user。user可以拥有多个role，如需要可设置default的role。\n\n","slug":"Oracle-CDB-PDB-表空间创建用户及角色","published":1,"updated":"2020-09-12T03:43:39.370Z","_id":"ckefnmd5m000029wa8vht0t5d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记录如何使用11g以上版本oracle</p>\n<a id=\"more\"></a>\n<p><strong>在进行如下操作之前，需保证Docker在running，然后启动ORACLE</strong></p>\n<h1 id=\"登录ORACLE\">登录ORACLE</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container ls</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it 3024386a1d24 /bin/bash</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker container ls</span><br><span class=\"line\">CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                        PORTS                                            NAMES</span><br><span class=\"line\">3024386a1d24        oracle/database:12.2.0.1-ee   <span class=\"string\">&quot;/bin/sh -c &#x27;exec <span class=\"variable\">$O</span>…&quot;</span>   43 minutes ago      Up About a minute (healthy)   0.0.0.0:1521-&gt;1521/tcp, 0.0.0.0:5500-&gt;5500/tcp   oracle</span><br><span class=\"line\">dockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker <span class=\"built_in\">exec</span> -it 3024386a1d24 /bin/bash</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ sqlplus / as sysdba</span><br><span class=\"line\"></span><br><span class=\"line\">SQL*Plus: Release 12.2.0.1.0 Production on Sat Aug 29 12:32:19 2020</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 1982, 2016, Oracle.  All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">ERROR:</span><br><span class=\"line\">ORA-12162: TNS:net service name is incorrectly specified</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Enter user-name: ^C^C^C</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ ps -ef | grep ora_</span><br><span class=\"line\">oracle      23     1  0 12:30 ?        00:00:00 ora_pmon_ORCLCDB</span><br><span class=\"line\">oracle      25     1  0 12:30 ?        00:00:00 ora_clmn_ORCLCDB</span><br><span class=\"line\">oracle      27     1  0 12:30 ?        00:00:00 ora_psp0_ORCLCDB</span><br><span class=\"line\">oracle      29     1  0 12:30 ?        00:00:00 ora_vktm_ORCLCDB</span><br><span class=\"line\">oracle      33     1  0 12:30 ?        00:00:00 ora_gen0_ORCLCDB</span><br><span class=\"line\">oracle      35     1  0 12:30 ?        00:00:00 ora_mman_ORCLCDB</span><br><span class=\"line\">oracle      39     1  0 12:30 ?        00:00:00 ora_gen1_ORCLCDB</span><br><span class=\"line\">oracle      43     1  0 12:30 ?        00:00:00 ora_diag_ORCLCDB</span><br><span class=\"line\">oracle      45     1  0 12:30 ?        00:00:00 ora_ofsd_ORCLCDB</span><br><span class=\"line\">oracle      49     1  0 12:30 ?        00:00:00 ora_dbrm_ORCLCDB</span><br><span class=\"line\">oracle      51     1  0 12:30 ?        00:00:00 ora_vkrm_ORCLCDB</span><br><span class=\"line\">oracle      53     1  0 12:30 ?        00:00:00 ora_svcb_ORCLCDB</span><br><span class=\"line\">oracle      55     1  0 12:30 ?        00:00:00 ora_pman_ORCLCDB</span><br><span class=\"line\">oracle      57     1  0 12:30 ?        00:00:00 ora_dia0_ORCLCDB</span><br><span class=\"line\">oracle      59     1  0 12:30 ?        00:00:00 ora_dbw0_ORCLCDB</span><br><span class=\"line\">oracle      61     1  0 12:30 ?        00:00:00 ora_lgwr_ORCLCDB</span><br><span class=\"line\">oracle      63     1  0 12:30 ?        00:00:00 ora_ckpt_ORCLCDB</span><br><span class=\"line\">oracle      65     1  0 12:30 ?        00:00:00 ora_lg00_ORCLCDB</span><br><span class=\"line\">oracle      67     1  0 12:30 ?        00:00:00 ora_smon_ORCLCDB</span><br><span class=\"line\">oracle      69     1  0 12:30 ?        00:00:00 ora_lg01_ORCLCDB</span><br><span class=\"line\">oracle      71     1  0 12:30 ?        00:00:00 ora_smco_ORCLCDB</span><br><span class=\"line\">oracle      73     1  0 12:30 ?        00:00:00 ora_reco_ORCLCDB</span><br><span class=\"line\">oracle      75     1  0 12:30 ?        00:00:00 ora_w000_ORCLCDB</span><br><span class=\"line\">oracle      77     1  0 12:30 ?        00:00:00 ora_lreg_ORCLCDB</span><br><span class=\"line\">oracle      79     1  0 12:30 ?        00:00:00 ora_w001_ORCLCDB</span><br><span class=\"line\">oracle      81     1  0 12:30 ?        00:00:00 ora_pxmn_ORCLCDB</span><br><span class=\"line\">oracle      85     1  0 12:30 ?        00:00:01 ora_mmon_ORCLCDB</span><br><span class=\"line\">oracle      87     1  0 12:30 ?        00:00:00 ora_mmnl_ORCLCDB</span><br><span class=\"line\">oracle      89     1  0 12:30 ?        00:00:00 ora_d000_ORCLCDB</span><br><span class=\"line\">oracle      91     1  0 12:30 ?        00:00:00 ora_s000_ORCLCDB</span><br><span class=\"line\">oracle      93     1  0 12:30 ?        00:00:00 ora_tmon_ORCLCDB</span><br><span class=\"line\">oracle     103     1  0 12:30 ?        00:00:00 ora_tt00_ORCLCDB</span><br><span class=\"line\">oracle     105     1  0 12:30 ?        00:00:00 ora_tt01_ORCLCDB</span><br><span class=\"line\">oracle     107     1  0 12:30 ?        00:00:00 ora_tt02_ORCLCDB</span><br><span class=\"line\">oracle     109     1  0 12:30 ?        00:00:00 ora_aqpc_ORCLCDB</span><br><span class=\"line\">oracle     113     1  0 12:30 ?        00:00:00 ora_p000_ORCLCDB</span><br><span class=\"line\">oracle     115     1  0 12:30 ?        00:00:00 ora_p001_ORCLCDB</span><br><span class=\"line\">oracle     117     1  0 12:30 ?        00:00:00 ora_p002_ORCLCDB</span><br><span class=\"line\">oracle     119     1  0 12:30 ?        00:00:00 ora_p003_ORCLCDB</span><br><span class=\"line\">oracle     121     1  0 12:30 ?        00:00:00 ora_p004_ORCLCDB</span><br><span class=\"line\">oracle     123     1  0 12:30 ?        00:00:00 ora_p005_ORCLCDB</span><br><span class=\"line\">oracle     125     1  0 12:30 ?        00:00:00 ora_p006_ORCLCDB</span><br><span class=\"line\">oracle     127     1  0 12:30 ?        00:00:00 ora_p007_ORCLCDB</span><br><span class=\"line\">oracle     129     1  0 12:30 ?        00:00:00 ora_p008_ORCLCDB</span><br><span class=\"line\">oracle     131     1  0 12:30 ?        00:00:00 ora_p009_ORCLCDB</span><br><span class=\"line\">oracle     133     1  0 12:30 ?        00:00:00 ora_p00a_ORCLCDB</span><br><span class=\"line\">oracle     135     1  0 12:30 ?        00:00:00 ora_p00b_ORCLCDB</span><br><span class=\"line\">oracle     137     1  0 12:30 ?        00:00:00 ora_p00c_ORCLCDB</span><br><span class=\"line\">oracle     139     1  0 12:30 ?        00:00:00 ora_p00d_ORCLCDB</span><br><span class=\"line\">oracle     141     1  0 12:30 ?        00:00:00 ora_p00e_ORCLCDB</span><br><span class=\"line\">oracle     143     1  0 12:30 ?        00:00:00 ora_p00f_ORCLCDB</span><br><span class=\"line\">oracle     286     1  1 12:30 ?        00:00:01 ora_cjq0_ORCLCDB</span><br><span class=\"line\">oracle     368     1  0 12:30 ?        00:00:00 ora_qm02_ORCLCDB</span><br><span class=\"line\">oracle     372     1  0 12:30 ?        00:00:00 ora_q002_ORCLCDB</span><br><span class=\"line\">oracle     374     1  0 12:30 ?        00:00:00 ora_q003_ORCLCDB</span><br><span class=\"line\">oracle     376     1  0 12:30 ?        00:00:00 ora_q004_ORCLCDB</span><br><span class=\"line\">oracle     411     1  0 12:31 ?        00:00:00 ora_w002_ORCLCDB</span><br><span class=\"line\">oracle     464   412  0 12:32 pts/0    00:00:00 grep --color=auto ora_</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ <span class=\"built_in\">export</span> ORACLE_SID=ORCLCDB</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ sqlplus / as sysdba</span><br></pre></td></tr></table></figure>\n<h1 id=\"修改Sys-System的密码\">修改Sys/System的密码</h1>\n<p>修改密码是便于自己使用跟设置SqlDeveloper，使用JDBC</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"keyword\">sys</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> YOURPASSWORD</span><br></pre></td></tr></table></figure>\n<h1 id=\"预备知识\">预备知识</h1>\n<p>需要知道CDB跟PDB是怎么回事，Oracle 12C引入了CDB与PDB的新特性，在ORACLE 12C数据库引入的多租用户环境（Multitenant Environment）中，允许一个数据库容器（CDB）承载多个可插拔数据库（PDB）。CDB全称为Container Database，中文翻译为数据库容器，PDB全称为Pluggable Database，即可插拔数据库。在ORACLE 12C之前，实例与数据库是一对一或多对一关系（RAC）：即一个实例只能与一个数据库相关联，数据库可以被多个实例所加载。而实例与数据库不可能是一对多的关系。当进入ORACLE 12C后，实例与数据库可以是一对多的关系。下面是官方文档关于CDB与PDB的关系图<br>\n<img src=\"oracle.jpg\" alt=\"ORACLE\"></p>\n<p>其实大家如果对SQL SERVER比较熟悉的话，这种CDB与PDB是不是感觉和SQL SERVER的单实例多数据库架构是一回事呢。像PDB$SEED可以看成是master、msdb等系统数据库，PDBS可以看成用户创建的数据库。而可插拔的概念与SQL SERVER中的用户数据库的分离、附加其实就是那么一回事。看来ORACLE也“抄袭”了一把SQL SERVER的概念，只是改头换面的包装了一番。</p>\n<h2 id=\"CDB组件（Components-of-a-CDB）\">CDB组件（Components of a CDB）</h2>\n<p>一个CDB数据库容器包含了下面一些组件：<br>\n<strong>ROOT组件：</strong><br>\nROOT又叫CDB$ROOT, 存储着ORACLE提供的元数据和Common User,元数据的一个例子是ORACLE提供的PL/SQL包的源代码，Common User 是指在每个容器中都存在的用户。</p>\n<p><strong>SEED组件：</strong><br>\nSeed又叫PDB$SEED,这个是你创建PDBS数据库的模板，你不能在Seed中添加或修改一个对象。一个CDB中有且只能有一个Seed. 这个感念，个人感觉非常类似SQL SERVER中的model数据库。</p>\n<p><strong>PDBS：</strong><br>\nCDB中可以有一个或多个PDBS，PDBS向后兼容，可以像以前在数据库中那样操作PDBS，这里指大多数常规操作。<br>\n这些组件中的每一个都可以被称为一个容器。因此，ROOT(根)是一个容器，Seed(种子)是一个容器，每个PDB是一个容器。每个容器在CDB中都有一个独一无二的的ID和名称。</p>\n<h3 id=\"查看当前容器\">查看当前容器</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql&gt; SHOW CON_NAME;</span><br><span class=\"line\"></span><br><span class=\"line\">CON_NAME </span><br><span class=\"line\"><span class=\"comment\">------------------------------</span></span><br><span class=\"line\">CDB$ROOT</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看CDB中可用的PDB\">查看CDB中可用的PDB</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql&gt; SELECT</span><br><span class=\"line\">    CON_ID,DBID,NAME,OPEN_MODE</span><br><span class=\"line\">FROM</span><br><span class=\"line\">    V$PDBS;</span><br></pre></td></tr></table></figure>\n<p><img src=\"pdbs.png\" alt=\"PDBS\"></p>\n<h2 id=\"切换至PDB\">切换至PDB</h2>\n<p>因为sql开发是需要在PDB上进行，所以需要切换至PDB中，只写两种方式，其中<strong>方式1</strong>是笔者常用<br>\n方式1:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">SESSION</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">CONTAINER</span> = ORCLPDB1;</span><br></pre></td></tr></table></figure>\n<p>方式2:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">pluggable</span> <span class=\"keyword\">database</span> ORCLPDB1 <span class=\"keyword\">open</span>;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用SqlDeveloper-方便写sql开发\">使用SqlDeveloper 方便写sql开发</h1>\n<h2 id=\"配置SqlDeveloper\">配置SqlDeveloper</h2>\n<p>为了区分，建议按DB类型进行分开, cdb的用户名跟密码是可以登录pdb的，下面都可以使用前面设置好的sys的用户名，当然你也可以只登录到CDB，然后使用上面的切换方式<br>\n<img src=\"sqldeveloperoverview.png\" alt=\"SQLDEVELOPER\"></p>\n<h3 id=\"使用Basic类型配置CDB\">使用Basic类型配置CDB</h3>\n<p><strong>注意正确选择Role</strong></p>\n<p><img src=\"cdbconfig.png\" alt=\"CDB Config\"><br>\n注：图中的<strong>Service name/SID（当前是一样的）</strong> 就是你在上面命令行中export的<strong>ORACLE_SID</strong></p>\n<h3 id=\"使用Basic类型配置PDB\">使用Basic类型配置PDB</h3>\n<p><img src=\"pdbconfig.png\" alt=\"PDB Config\"></p>\n<h3 id=\"使用JDBC配置PDB-CDB\">使用JDBC配置PDB/CDB</h3>\n<p><strong>只需要把上图中的Connection Type改成Advanced</strong><br>\nJDBC URL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc:oracle:thin:@localhost:1521/orclpdb1</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用Sql-Developer进行开发\">使用Sql Developer进行开发</h2>\n<h3 id=\"创建TableSpace\">创建TableSpace</h3>\n<p>数据文件和日志文件是数据库中最关键的文件。它们是数据存储的地方。每一个数据库至少有一个与之相关的数据文件，通常情况下不仅仅一个，有非常多。数据在数据文件里是怎样组织的？<br>\n表空间就是一个用于管理数据文件的逻辑容器，它是与数据文件相关联的，一个表空间至少要有一个数据文件与之关联。<br>\n与user和schema相比，tablespace是一个相对更加底层的概念，可以通过create tablespace创建表空间。<br>\n创建名为Developer的table space：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLESPACE</span> DEVELOPER <span class=\"keyword\">DATAFILE</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;/opt/oracle/product/12.2.0.1/dbhome_1/dbs/DEVELOPER.dbf&#x27;</span> <span class=\"keyword\">SIZE</span> <span class=\"number\">4</span> G</span><br><span class=\"line\">        <span class=\"keyword\">AUTOEXTEND</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">NEXT</span> <span class=\"number\">200</span> M</span><br><span class=\"line\"><span class=\"keyword\">LOGGING</span> <span class=\"keyword\">EXTENT</span> <span class=\"keyword\">MANAGEMENT</span> <span class=\"keyword\">LOCAL</span> <span class=\"keyword\">AUTOALLOCATE</span>;</span><br></pre></td></tr></table></figure>\n<p>当然如果使用<strong>Navicat</strong>的话就不需要写这个sql了。</p>\n<h3 id=\"Schema\">Schema</h3>\n<p>Oracle中的schema是若干个数据库对象的集合，用于管理数据库中的各种对象，这里的对象包括：表（table）、视图(View)、存储过程(Stored Procedure)、序列(Sequence)、索引(Index)等等。一个schema下包括若干个表、视图、存储过程等对象。<br>\n其实，一个tablespace创建出来之后，就存在一个同名的schema。当然一个表空间上可以存在多个schema。</p>\n<h3 id=\"常见User，及Role。\">常见User，及Role。</h3>\n<p>创建用户需要指定tablespace，可理解成在哪个数据库使用这个user</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> username <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">password</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">TABLESPACE</span> DEVELOPER <span class=\"keyword\">TEMPORARY</span> <span class=\"keyword\">TABLESPACE</span> TEMP;</span><br></pre></td></tr></table></figure>\n<p>创建Role，主要作用就是权限管理，不同的role的grant不同的权限，不同的role可以grant给user，便可以实现不同权限管理的功能。比如，创建一个Read-only的role，可以赋给普通用户，只能查询，不能update数据，场景可以是对production的数据赋予read-only权限，很容易理解production都是真实的生产数据，不能随意更改，只能查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--create role</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- availible PRIVILEGE</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span>  * <span class=\"keyword\">FROM</span>  SYS.ROLE_SYS_PRIVS；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- grant role</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> </span><br><span class=\"line\">     <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">SEQUENCE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">PROCEDURE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TYPE</span>, <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>,<span class=\"keyword\">SELECT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">SEQUENCE</span>, <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>, <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span> </span><br><span class=\"line\"><span class=\"keyword\">TO</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--grant role to user</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> DEVELOPER_ROLE <span class=\"keyword\">TO</span> DEVELOPER;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--设置默认的role</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> DEVELOPER <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--如需要可以回收权限 from user</span></span><br><span class=\"line\"><span class=\"keyword\">revoke</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">PROCEDURE</span> <span class=\"keyword\">from</span> DEVELOPER;</span><br></pre></td></tr></table></figure>\n<p>可以从可用的权限中选择不同的privilege赋给role，然后把role再赋给user，此时user便有了赋予的权限，也不再需要一个一个的role赋给user。user可以拥有多个role，如需要可设置default的role。</p>\n","site":{"data":{}},"excerpt":"<p>记录如何使用11g以上版本oracle</p>","more":"<p><strong>在进行如下操作之前，需保证Docker在running，然后启动ORACLE</strong></p>\n<h1 id=\"登录ORACLE\">登录ORACLE</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container ls</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it 3024386a1d24 /bin/bash</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker container ls</span><br><span class=\"line\">CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                        PORTS                                            NAMES</span><br><span class=\"line\">3024386a1d24        oracle/database:12.2.0.1-ee   <span class=\"string\">&quot;/bin/sh -c &#x27;exec <span class=\"variable\">$O</span>…&quot;</span>   43 minutes ago      Up About a minute (healthy)   0.0.0.0:1521-&gt;1521/tcp, 0.0.0.0:5500-&gt;5500/tcp   oracle</span><br><span class=\"line\">dockerfiles [remotes/origin/revert-1451-ssl_enable~53] % docker <span class=\"built_in\">exec</span> -it 3024386a1d24 /bin/bash</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ sqlplus / as sysdba</span><br><span class=\"line\"></span><br><span class=\"line\">SQL*Plus: Release 12.2.0.1.0 Production on Sat Aug 29 12:32:19 2020</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 1982, 2016, Oracle.  All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">ERROR:</span><br><span class=\"line\">ORA-12162: TNS:net service name is incorrectly specified</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Enter user-name: ^C^C^C</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ </span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ ps -ef | grep ora_</span><br><span class=\"line\">oracle      23     1  0 12:30 ?        00:00:00 ora_pmon_ORCLCDB</span><br><span class=\"line\">oracle      25     1  0 12:30 ?        00:00:00 ora_clmn_ORCLCDB</span><br><span class=\"line\">oracle      27     1  0 12:30 ?        00:00:00 ora_psp0_ORCLCDB</span><br><span class=\"line\">oracle      29     1  0 12:30 ?        00:00:00 ora_vktm_ORCLCDB</span><br><span class=\"line\">oracle      33     1  0 12:30 ?        00:00:00 ora_gen0_ORCLCDB</span><br><span class=\"line\">oracle      35     1  0 12:30 ?        00:00:00 ora_mman_ORCLCDB</span><br><span class=\"line\">oracle      39     1  0 12:30 ?        00:00:00 ora_gen1_ORCLCDB</span><br><span class=\"line\">oracle      43     1  0 12:30 ?        00:00:00 ora_diag_ORCLCDB</span><br><span class=\"line\">oracle      45     1  0 12:30 ?        00:00:00 ora_ofsd_ORCLCDB</span><br><span class=\"line\">oracle      49     1  0 12:30 ?        00:00:00 ora_dbrm_ORCLCDB</span><br><span class=\"line\">oracle      51     1  0 12:30 ?        00:00:00 ora_vkrm_ORCLCDB</span><br><span class=\"line\">oracle      53     1  0 12:30 ?        00:00:00 ora_svcb_ORCLCDB</span><br><span class=\"line\">oracle      55     1  0 12:30 ?        00:00:00 ora_pman_ORCLCDB</span><br><span class=\"line\">oracle      57     1  0 12:30 ?        00:00:00 ora_dia0_ORCLCDB</span><br><span class=\"line\">oracle      59     1  0 12:30 ?        00:00:00 ora_dbw0_ORCLCDB</span><br><span class=\"line\">oracle      61     1  0 12:30 ?        00:00:00 ora_lgwr_ORCLCDB</span><br><span class=\"line\">oracle      63     1  0 12:30 ?        00:00:00 ora_ckpt_ORCLCDB</span><br><span class=\"line\">oracle      65     1  0 12:30 ?        00:00:00 ora_lg00_ORCLCDB</span><br><span class=\"line\">oracle      67     1  0 12:30 ?        00:00:00 ora_smon_ORCLCDB</span><br><span class=\"line\">oracle      69     1  0 12:30 ?        00:00:00 ora_lg01_ORCLCDB</span><br><span class=\"line\">oracle      71     1  0 12:30 ?        00:00:00 ora_smco_ORCLCDB</span><br><span class=\"line\">oracle      73     1  0 12:30 ?        00:00:00 ora_reco_ORCLCDB</span><br><span class=\"line\">oracle      75     1  0 12:30 ?        00:00:00 ora_w000_ORCLCDB</span><br><span class=\"line\">oracle      77     1  0 12:30 ?        00:00:00 ora_lreg_ORCLCDB</span><br><span class=\"line\">oracle      79     1  0 12:30 ?        00:00:00 ora_w001_ORCLCDB</span><br><span class=\"line\">oracle      81     1  0 12:30 ?        00:00:00 ora_pxmn_ORCLCDB</span><br><span class=\"line\">oracle      85     1  0 12:30 ?        00:00:01 ora_mmon_ORCLCDB</span><br><span class=\"line\">oracle      87     1  0 12:30 ?        00:00:00 ora_mmnl_ORCLCDB</span><br><span class=\"line\">oracle      89     1  0 12:30 ?        00:00:00 ora_d000_ORCLCDB</span><br><span class=\"line\">oracle      91     1  0 12:30 ?        00:00:00 ora_s000_ORCLCDB</span><br><span class=\"line\">oracle      93     1  0 12:30 ?        00:00:00 ora_tmon_ORCLCDB</span><br><span class=\"line\">oracle     103     1  0 12:30 ?        00:00:00 ora_tt00_ORCLCDB</span><br><span class=\"line\">oracle     105     1  0 12:30 ?        00:00:00 ora_tt01_ORCLCDB</span><br><span class=\"line\">oracle     107     1  0 12:30 ?        00:00:00 ora_tt02_ORCLCDB</span><br><span class=\"line\">oracle     109     1  0 12:30 ?        00:00:00 ora_aqpc_ORCLCDB</span><br><span class=\"line\">oracle     113     1  0 12:30 ?        00:00:00 ora_p000_ORCLCDB</span><br><span class=\"line\">oracle     115     1  0 12:30 ?        00:00:00 ora_p001_ORCLCDB</span><br><span class=\"line\">oracle     117     1  0 12:30 ?        00:00:00 ora_p002_ORCLCDB</span><br><span class=\"line\">oracle     119     1  0 12:30 ?        00:00:00 ora_p003_ORCLCDB</span><br><span class=\"line\">oracle     121     1  0 12:30 ?        00:00:00 ora_p004_ORCLCDB</span><br><span class=\"line\">oracle     123     1  0 12:30 ?        00:00:00 ora_p005_ORCLCDB</span><br><span class=\"line\">oracle     125     1  0 12:30 ?        00:00:00 ora_p006_ORCLCDB</span><br><span class=\"line\">oracle     127     1  0 12:30 ?        00:00:00 ora_p007_ORCLCDB</span><br><span class=\"line\">oracle     129     1  0 12:30 ?        00:00:00 ora_p008_ORCLCDB</span><br><span class=\"line\">oracle     131     1  0 12:30 ?        00:00:00 ora_p009_ORCLCDB</span><br><span class=\"line\">oracle     133     1  0 12:30 ?        00:00:00 ora_p00a_ORCLCDB</span><br><span class=\"line\">oracle     135     1  0 12:30 ?        00:00:00 ora_p00b_ORCLCDB</span><br><span class=\"line\">oracle     137     1  0 12:30 ?        00:00:00 ora_p00c_ORCLCDB</span><br><span class=\"line\">oracle     139     1  0 12:30 ?        00:00:00 ora_p00d_ORCLCDB</span><br><span class=\"line\">oracle     141     1  0 12:30 ?        00:00:00 ora_p00e_ORCLCDB</span><br><span class=\"line\">oracle     143     1  0 12:30 ?        00:00:00 ora_p00f_ORCLCDB</span><br><span class=\"line\">oracle     286     1  1 12:30 ?        00:00:01 ora_cjq0_ORCLCDB</span><br><span class=\"line\">oracle     368     1  0 12:30 ?        00:00:00 ora_qm02_ORCLCDB</span><br><span class=\"line\">oracle     372     1  0 12:30 ?        00:00:00 ora_q002_ORCLCDB</span><br><span class=\"line\">oracle     374     1  0 12:30 ?        00:00:00 ora_q003_ORCLCDB</span><br><span class=\"line\">oracle     376     1  0 12:30 ?        00:00:00 ora_q004_ORCLCDB</span><br><span class=\"line\">oracle     411     1  0 12:31 ?        00:00:00 ora_w002_ORCLCDB</span><br><span class=\"line\">oracle     464   412  0 12:32 pts/0    00:00:00 grep --color=auto ora_</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ <span class=\"built_in\">export</span> ORACLE_SID=ORCLCDB</span><br><span class=\"line\">[oracle@3024386a1d24 ~]$ sqlplus / as sysdba</span><br></pre></td></tr></table></figure>\n<h1 id=\"修改Sys-System的密码\">修改Sys/System的密码</h1>\n<p>修改密码是便于自己使用跟设置SqlDeveloper，使用JDBC</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"keyword\">sys</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> YOURPASSWORD</span><br></pre></td></tr></table></figure>\n<h1 id=\"预备知识\">预备知识</h1>\n<p>需要知道CDB跟PDB是怎么回事，Oracle 12C引入了CDB与PDB的新特性，在ORACLE 12C数据库引入的多租用户环境（Multitenant Environment）中，允许一个数据库容器（CDB）承载多个可插拔数据库（PDB）。CDB全称为Container Database，中文翻译为数据库容器，PDB全称为Pluggable Database，即可插拔数据库。在ORACLE 12C之前，实例与数据库是一对一或多对一关系（RAC）：即一个实例只能与一个数据库相关联，数据库可以被多个实例所加载。而实例与数据库不可能是一对多的关系。当进入ORACLE 12C后，实例与数据库可以是一对多的关系。下面是官方文档关于CDB与PDB的关系图<br>\n<img src=\"oracle.jpg\" alt=\"ORACLE\"></p>\n<p>其实大家如果对SQL SERVER比较熟悉的话，这种CDB与PDB是不是感觉和SQL SERVER的单实例多数据库架构是一回事呢。像PDB$SEED可以看成是master、msdb等系统数据库，PDBS可以看成用户创建的数据库。而可插拔的概念与SQL SERVER中的用户数据库的分离、附加其实就是那么一回事。看来ORACLE也“抄袭”了一把SQL SERVER的概念，只是改头换面的包装了一番。</p>\n<h2 id=\"CDB组件（Components-of-a-CDB）\">CDB组件（Components of a CDB）</h2>\n<p>一个CDB数据库容器包含了下面一些组件：<br>\n<strong>ROOT组件：</strong><br>\nROOT又叫CDB$ROOT, 存储着ORACLE提供的元数据和Common User,元数据的一个例子是ORACLE提供的PL/SQL包的源代码，Common User 是指在每个容器中都存在的用户。</p>\n<p><strong>SEED组件：</strong><br>\nSeed又叫PDB$SEED,这个是你创建PDBS数据库的模板，你不能在Seed中添加或修改一个对象。一个CDB中有且只能有一个Seed. 这个感念，个人感觉非常类似SQL SERVER中的model数据库。</p>\n<p><strong>PDBS：</strong><br>\nCDB中可以有一个或多个PDBS，PDBS向后兼容，可以像以前在数据库中那样操作PDBS，这里指大多数常规操作。<br>\n这些组件中的每一个都可以被称为一个容器。因此，ROOT(根)是一个容器，Seed(种子)是一个容器，每个PDB是一个容器。每个容器在CDB中都有一个独一无二的的ID和名称。</p>\n<h3 id=\"查看当前容器\">查看当前容器</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql&gt; SHOW CON_NAME;</span><br><span class=\"line\"></span><br><span class=\"line\">CON_NAME </span><br><span class=\"line\"><span class=\"comment\">------------------------------</span></span><br><span class=\"line\">CDB$ROOT</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看CDB中可用的PDB\">查看CDB中可用的PDB</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql&gt; SELECT</span><br><span class=\"line\">    CON_ID,DBID,NAME,OPEN_MODE</span><br><span class=\"line\">FROM</span><br><span class=\"line\">    V$PDBS;</span><br></pre></td></tr></table></figure>\n<p><img src=\"pdbs.png\" alt=\"PDBS\"></p>\n<h2 id=\"切换至PDB\">切换至PDB</h2>\n<p>因为sql开发是需要在PDB上进行，所以需要切换至PDB中，只写两种方式，其中<strong>方式1</strong>是笔者常用<br>\n方式1:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">SESSION</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">CONTAINER</span> = ORCLPDB1;</span><br></pre></td></tr></table></figure>\n<p>方式2:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">pluggable</span> <span class=\"keyword\">database</span> ORCLPDB1 <span class=\"keyword\">open</span>;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用SqlDeveloper-方便写sql开发\">使用SqlDeveloper 方便写sql开发</h1>\n<h2 id=\"配置SqlDeveloper\">配置SqlDeveloper</h2>\n<p>为了区分，建议按DB类型进行分开, cdb的用户名跟密码是可以登录pdb的，下面都可以使用前面设置好的sys的用户名，当然你也可以只登录到CDB，然后使用上面的切换方式<br>\n<img src=\"sqldeveloperoverview.png\" alt=\"SQLDEVELOPER\"></p>\n<h3 id=\"使用Basic类型配置CDB\">使用Basic类型配置CDB</h3>\n<p><strong>注意正确选择Role</strong></p>\n<p><img src=\"cdbconfig.png\" alt=\"CDB Config\"><br>\n注：图中的<strong>Service name/SID（当前是一样的）</strong> 就是你在上面命令行中export的<strong>ORACLE_SID</strong></p>\n<h3 id=\"使用Basic类型配置PDB\">使用Basic类型配置PDB</h3>\n<p><img src=\"pdbconfig.png\" alt=\"PDB Config\"></p>\n<h3 id=\"使用JDBC配置PDB-CDB\">使用JDBC配置PDB/CDB</h3>\n<p><strong>只需要把上图中的Connection Type改成Advanced</strong><br>\nJDBC URL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc:oracle:thin:@localhost:1521/orclpdb1</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用Sql-Developer进行开发\">使用Sql Developer进行开发</h2>\n<h3 id=\"创建TableSpace\">创建TableSpace</h3>\n<p>数据文件和日志文件是数据库中最关键的文件。它们是数据存储的地方。每一个数据库至少有一个与之相关的数据文件，通常情况下不仅仅一个，有非常多。数据在数据文件里是怎样组织的？<br>\n表空间就是一个用于管理数据文件的逻辑容器，它是与数据文件相关联的，一个表空间至少要有一个数据文件与之关联。<br>\n与user和schema相比，tablespace是一个相对更加底层的概念，可以通过create tablespace创建表空间。<br>\n创建名为Developer的table space：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLESPACE</span> DEVELOPER <span class=\"keyword\">DATAFILE</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;/opt/oracle/product/12.2.0.1/dbhome_1/dbs/DEVELOPER.dbf&#x27;</span> <span class=\"keyword\">SIZE</span> <span class=\"number\">4</span> G</span><br><span class=\"line\">        <span class=\"keyword\">AUTOEXTEND</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">NEXT</span> <span class=\"number\">200</span> M</span><br><span class=\"line\"><span class=\"keyword\">LOGGING</span> <span class=\"keyword\">EXTENT</span> <span class=\"keyword\">MANAGEMENT</span> <span class=\"keyword\">LOCAL</span> <span class=\"keyword\">AUTOALLOCATE</span>;</span><br></pre></td></tr></table></figure>\n<p>当然如果使用<strong>Navicat</strong>的话就不需要写这个sql了。</p>\n<h3 id=\"Schema\">Schema</h3>\n<p>Oracle中的schema是若干个数据库对象的集合，用于管理数据库中的各种对象，这里的对象包括：表（table）、视图(View)、存储过程(Stored Procedure)、序列(Sequence)、索引(Index)等等。一个schema下包括若干个表、视图、存储过程等对象。<br>\n其实，一个tablespace创建出来之后，就存在一个同名的schema。当然一个表空间上可以存在多个schema。</p>\n<h3 id=\"常见User，及Role。\">常见User，及Role。</h3>\n<p>创建用户需要指定tablespace，可理解成在哪个数据库使用这个user</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> username <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">password</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">TABLESPACE</span> DEVELOPER <span class=\"keyword\">TEMPORARY</span> <span class=\"keyword\">TABLESPACE</span> TEMP;</span><br></pre></td></tr></table></figure>\n<p>创建Role，主要作用就是权限管理，不同的role的grant不同的权限，不同的role可以grant给user，便可以实现不同权限管理的功能。比如，创建一个Read-only的role，可以赋给普通用户，只能查询，不能update数据，场景可以是对production的数据赋予read-only权限，很容易理解production都是真实的生产数据，不能随意更改，只能查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--create role</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- availible PRIVILEGE</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span>  * <span class=\"keyword\">FROM</span>  SYS.ROLE_SYS_PRIVS；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- grant role</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> </span><br><span class=\"line\">     <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">SEQUENCE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">PROCEDURE</span>, <span class=\"keyword\">CREATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TYPE</span>, <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>,<span class=\"keyword\">SELECT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">SEQUENCE</span>, <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span>, <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ANY</span> <span class=\"keyword\">TABLE</span> </span><br><span class=\"line\"><span class=\"keyword\">TO</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--grant role to user</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> DEVELOPER_ROLE <span class=\"keyword\">TO</span> DEVELOPER;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--设置默认的role</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> DEVELOPER <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">ROLE</span> DEVELOPER_ROLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--如需要可以回收权限 from user</span></span><br><span class=\"line\"><span class=\"keyword\">revoke</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">PROCEDURE</span> <span class=\"keyword\">from</span> DEVELOPER;</span><br></pre></td></tr></table></figure>\n<p>可以从可用的权限中选择不同的privilege赋给role，然后把role再赋给user，此时user便有了赋予的权限，也不再需要一个一个的role赋给user。user可以拥有多个role，如需要可设置default的role。</p>"}],"PostAsset":[{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/containers.jpg","slug":"containers.jpg","post":"cke2uatpn0005kcwaeo155gmp","modified":0,"renderable":0},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/imagetags.jpg","slug":"imagetags.jpg","post":"cke2uatpn0005kcwaeo155gmp","modified":0,"renderable":0},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/list.jpg","slug":"list.jpg","post":"cke2uatpn0005kcwaeo155gmp","modified":0,"renderable":0},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/login.jpg","slug":"login.jpg","post":"cke2uatpn0005kcwaeo155gmp","modified":0,"renderable":0},{"_id":"source/_posts/Docker创建镜像并上传到Docker-Hub/signup.jpg","slug":"signup.jpg","post":"cke2uatpn0005kcwaeo155gmp","modified":0,"renderable":0},{"_id":"source/_posts/如何在MacOS上使用Docker安装Oracle/dockerdashboard.jpg","slug":"dockerdashboard.jpg","post":"cke2uatpu000akcwae0iqhr3j","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/cdbconfig.png","slug":"cdbconfig.png","post":"ckefnmd5m000029wa8vht0t5d","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/pdbconfig.png","slug":"pdbconfig.png","post":"ckefnmd5m000029wa8vht0t5d","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/oracle.jpg","slug":"oracle.jpg","post":"ckefnmd5m000029wa8vht0t5d","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/pdbs.png","slug":"pdbs.png","post":"ckefnmd5m000029wa8vht0t5d","modified":0,"renderable":0},{"_id":"source/_posts/Oracle-CDB-PDB-表空间创建用户及角色/sqldeveloperoverview.png","slug":"sqldeveloperoverview.png","post":"ckefnmd5m000029wa8vht0t5d","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cke2uatpn0005kcwaeo155gmp","category_id":"cke2uatpr0007kcwahk7v4pem","_id":"cke2uatpv000dkcwa1p4ddg32"},{"post_id":"cke2uatpq0006kcwa6f1mcoh6","category_id":"cke2uatpv000bkcwacreydakg","_id":"cke2uatpw000ikcwa4pmgeb1q"},{"post_id":"cke2uatpu000akcwae0iqhr3j","category_id":"cke2uatpv000ekcwa7d8m1idt","_id":"cke2uatpw000kkcwa0tkg57n7"},{"post_id":"ckefnmd5m000029wa8vht0t5d","category_id":"cke9yu4h30001udwab3pm39fb","_id":"ckefnmd5u000229wady6tf4e7"}],"PostTag":[{"post_id":"cke2uatpn0005kcwaeo155gmp","tag_id":"cke2uatpt0008kcwagt4l3ter","_id":"cke2uatpw000gkcwa4r34h0mw"},{"post_id":"cke2uatpn0005kcwaeo155gmp","tag_id":"cke2uatpv000ckcwa0wqe5ynh","_id":"cke2uatpw000hkcwa32c8e2qf"},{"post_id":"cke2uatpq0006kcwa6f1mcoh6","tag_id":"cke2uatpw000fkcwad1pq4abo","_id":"cke2uatpy000nkcwa5afnfr9u"},{"post_id":"cke2uatpq0006kcwa6f1mcoh6","tag_id":"cke2uatpw000jkcwacgp4garv","_id":"cke2uatpy000okcwaarx183sz"},{"post_id":"cke2uatpq0006kcwa6f1mcoh6","tag_id":"cke2uatpw000lkcwaa8ek1hp1","_id":"cke2uatpy000qkcwa8uclck1g"},{"post_id":"cke2uatpu000akcwae0iqhr3j","tag_id":"cke2uatpw000fkcwad1pq4abo","_id":"cke2uatpy000rkcwa8cxm1wc1"},{"post_id":"cke2uatpu000akcwae0iqhr3j","tag_id":"cke2uatpt0008kcwagt4l3ter","_id":"cke2uatpy000skcwah22z7m77"},{"post_id":"cke2uatpu000akcwae0iqhr3j","tag_id":"cke2uatpy000pkcwa5mjshgtq","_id":"cke2uatpy000tkcwa7725h0iy"},{"post_id":"ckefnmd5m000029wa8vht0t5d","tag_id":"ckefnmd5s000129wadzwv7ltz","_id":"ckefnmd5v000629wa1hyqbw9m"},{"post_id":"ckefnmd5m000029wa8vht0t5d","tag_id":"ckefnmd5u000329wa6aitejxr","_id":"ckefnmd5v000729wa1k0q309h"},{"post_id":"ckefnmd5m000029wa8vht0t5d","tag_id":"ckefnmd5v000429wa60i964tq","_id":"ckefnmd5v000829wae7x0dshb"},{"post_id":"ckefnmd5m000029wa8vht0t5d","tag_id":"ckefnmd5v000529wae3lf2610","_id":"ckefnmd5v000929wab65fe655"}],"Tag":[{"name":"Docker","_id":"cke2uatpt0008kcwagt4l3ter"},{"name":"Docker Hub","_id":"cke2uatpv000ckcwa0wqe5ynh"},{"name":"MacOS","_id":"cke2uatpw000fkcwad1pq4abo"},{"name":"隐藏文件","_id":"cke2uatpw000jkcwacgp4garv"},{"name":"Hidden File","_id":"cke2uatpw000lkcwaa8ek1hp1"},{"name":"Oracle","_id":"cke2uatpy000pkcwa5mjshgtq"},{"name":"oracle","_id":"cke9yu4h50002udwahzig5uft"},{"name":"Tablespace","_id":"cke9yu4h50003udwab10da5om"},{"name":"schema","_id":"cke9yu4h60005udwa2lrk8gja"},{"name":"ORACLE","_id":"ckefnmd5s000129wadzwv7ltz"},{"name":"TABLESPACE","_id":"ckefnmd5u000329wa6aitejxr"},{"name":"SCHEMA","_id":"ckefnmd5v000429wa60i964tq"},{"name":"ROLE","_id":"ckefnmd5v000529wae3lf2610"}]}}